Paragraph,Tasks (Old),Henry's mechanical tasks,Henry's library tasks,Henry's library tasks (updated),Sarah's mechanical tasks,Sarah's library tasks,Sarah's library tasks (updated),Agree?,Conflict,Resolved mechanical tasks,Resolved library tasks,Resolved library tasks (updated),Program (Original verb list),Program (Domain specific list),Program (domain specific + filter),Mechanical count,Library count,Mechanical correct,Program count,Library correct,Dom spec count,Dom spec correct,Dom spec + filter count,Dom spec + filter correct,Code example,Program paragraph linked
image credit: Ismael PÃ©rez Ortiz,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
Click here if you just want the latest release jar file.,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,,,
JSON is a light-weight language-independent data interchange format.,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
The JSON-Java package is a reference implementation that demonstrates how to parse JSON documents into Java objects and how to generate new JSON documents from the Java classes.,,"Parse JSON documents into Java objects
Generate new JSON documents from Java classes","Parse JSON documents into Java objects
Generate new JSON documents from Java classes","Parse JSON documents into Java objects
Generate new JSON documents from Java classes","Parse JSON documents into Java objects
Generate new JSON documents from Java classes","Parse JSON documents into Java objects
Generate new JSON documents from Java classes","Parse JSON documents into Java objects
Generate new JSON documents from Java classes",1,,"Parse JSON documents into Java objects
Generate new JSON documents from Java classes",,"Parse JSON documents into Java objects
Generate new JSON documents from Java classes",generate new JSON documents from Java classes,"parse JSON documents into Java objects
generate new JSON documents from Java classes","parse JSON documents into Java objects
generate new JSON documents from Java classes",2,2,0,1,0,2,2,2,2,,
Project goals include:,,,,,,,,1,,,,,,,,0,0,0,1,0,0,0,0,0,,
"The files in this package implement JSON encoders and decoders. The package can also convert between JSON and XML, HTTP headers, Cookies, and CDL.",,,,,Convert between JSON and XML,,"Convert between JSON and XML
Convert between JSON and HTTP Headers
Convert between JSON and Cookies
Convert between JSON and CDL",0,1,"Convert between JSON and XML
Convert between JSON and HTTP Headers
Convert between JSON and Cookies
Convert between JSON and CDL","Convert between JSON and XML
Convert between JSON and HTTP Headers
Convert between JSON and Cookies
Convert between JSON and CDL","Convert between JSON and XML
Convert between JSON and HTTP Headers
Convert between JSON and Cookies
Convert between JSON and CDL","implement JSON encoders
implement decoders
convert  between CDL
convert  between JSON
convert  between XML
convert  between HTTP headers
convert  between cookies","convert  between CDL
convert  between JSON
convert  between XML
convert  between HTTP headers
convert  between cookies","convert  between CDL
convert  between JSON
convert  between XML
convert  between HTTP headers
convert  between cookies",4,4,4,7,4,5,5,5,5,,
"The license includes this restriction: The software shall be used for good, not evil. If your conscience cannot live with that, then choose a different package.",,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
If you would like to contribute to this project,,,,,Contribute to this project,,Contribute to this project,0,1,Contribute to this project,,,,,,1,0,0,0,0,0,0,0,0,,
"Bug fixes, code improvements, and unit test coverage changes are welcome! Because this project is currently in the maintenance phase, the kinds of changes that can be accepted are limited. For more information, please read the FAQ.",,,,,,,,1,,,,,read FAQ for more information,read FAQ for more information,read FAQ for more information,0,0,0,1,0,1,0,1,0,,
"The org.json package can be built from the command line, Maven, and Gradle. The unit tests can be executed from Maven, Gradle, or individually in an IDE e.g. Eclipse.",,,,,"Build from command line
Build from Maven
Build from Gradle
Execute unit tests from Maven
Execute unit tests from Gradle
Execute unit tests from IDE",,"Build from command line
Build from Maven
Build from Gradle
Execute unit tests from Maven
Execute unit tests from Gradle
Execute unit tests from IDE",0,1,"Build from command line
Build from Maven
Build from Gradle
Execute unit tests from Maven
Execute unit tests from Gradle
Execute unit tests from IDE",,"Build from command line
Build from Maven
Build from Gradle
Execute unit tests from Maven
Execute unit tests from Gradle
Execute unit tests from IDE","execute unit tests from e.g. eclipse
execute unit tests from maven
execute unit tests from gradle","execute unit tests from e.g. eclipse
execute unit tests from maven
execute unit tests from gradle","execute unit tests from e.g. eclipse
execute unit tests from maven
execute unit tests from gradle",6,6,3,3,2,3,3,3,3,,
Building from the command line,Building from command line,Build from command line,,Build from command line,Build from the command line,,Build from the command line,1,0,Build from the command line,,Build from the command line,,,,1,1,0,0,0,0,0,0,0,,
Build the class files from the package root directory src/main/java,Building from root directory,Build class files    ,,Build class files,Build the class files,,Build the class files,1,0,Build the class files,,Build the class files,,,,1,1,,0,0,0,0,0,0,javac org/json/*.java,"The org.json package can be built from the command line, Maven, and Gradle. The unit tests can be executed from Maven, Gradle, or individually in an IDE e.g. Eclipse."
Create the jar file in the current directory,Create jar file,Create jar file,,Create jar file,Create the jar file in the current directory,,Create the jar file in the current directory,1,0,Create the jar file in the current directory,,Create the jar file in the current directory,create jar file in current directory,,,1,1,0,1,1,0,0,0,0,jar cf json-java.jar org/json/*.class,
Compile a program that uses the jar (see example code below),,,,,Compile program,,Compile program,0,1,Compile program,,,"compile program
use jar
use program","compile program
use jar
use program",compile program,1,0,1,3,0,3,0,1,0,javac -cp .;json-java.jar Test.java ,
Test file contents,,,,,Test file contents,,Test file contents,0,1,Test file contents,,,test file contents,,,1,0,1,1,0,0,0,0,0,"import org.json.JSONObject;
public class Test {
    public static void main(String args[]){
       JSONObject jo = new JSONObject(""{ \""abc\"" : \""def\"" }"");
       System.out.println(jo.toString());
    }
}",Compile a program that uses the jar (see example code below)
Execute the Test file,Execute tests,Execute test,,,Execute the Test file,,Execute Test file,0,1,Execute Test file,,,execute Test file,execute Test file,execute Test file,1,0,1,1,0,1,0,1,0,java -cp .;json-java.jar Test,
Expected output,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,"{""abc"":""def""}",Execute the Test file
Tools to build the package and execute the unit tests,,,,,"Build package
Execute unit tests",,"Build the package
Execute unit tests",0,1,"Build the package
Execute unit tests",,"Build the package
Execute unit tests",execute unit,execute unit,execute unit,2,2,1,1,0,1,1,1,1,,
Execute the test suite with Maven:,Execute with Maven,Test Maven,,,Exectute test suite with Maven,,Exectute test suite with Maven,0,1,Execute test suite with Maven,,,execute test suite with maven,execute test suite with maven,execute test suite with maven,1,0,1,1,0,1,0,1,0,mvn clean test,
Execute the test suite with Gradlew:,Execute with Gradlew,Test Gradlew,,,Execute test suite with Gradlew,,Execute test suite with Gradlew,0,1,Execute test suite with Gradlew,,,execute test suite with gradlew,execute test suite with gradlew,execute test suite with gradlew,1,0,1,1,0,1,0,1,0,gradlew clean build test,
Recent directory structure change,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
"Due to a recent commit - #515 Merge tests and pom and code - the structure of the project has changed from a flat directory containing all of the Java files to a directory structure that includes unit tests and several tools used to build the project jar and run the unit tests. If you have difficulty using the new structure, please open an issue so we can work through it.",,,,,"Open issue
Include unit tests
Build project
Run unit tests",,"Open issue
Include unit tests
Build project
Run unit tests",0,1,"Open issue
Include unit tests
Build project
Run unit tests",, ,"include unit tests
include several tools
include directory structure
run unit tests
change  due_to recent commit
change  from flat directory
use new structure
open issue","include unit tests
include several tools
include directory structure
run unit tests
use new structure
open issue",,4,1,3,8,0,6,0,0,0,,
Implementation notes,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
"Numeric types in this package comply with ECMA-404: The JSON Data Interchange Format and RFC 8259: The JavaScript Object Notation (JSON) Data Interchange Format. This package fully supports Integer, Long, and Double Java types. Partial support for BigInteger and BigDecimal values in JSONObject and JSONArray objects is provided in the form of get(), opt(), and put() API methods.",,,,,"Support integer
Supoort Long
Support Double 
Suppot BigInteger
Support BigDecimal",,,1,,"Support integer
Supoort Long
Support Double 
Support BigInteger
Support BigDecimal",,,"support integer
support long
support java types
provide partial support in form
provide partial support for BigInteger BigDecimal values","support integer
support long
support java types
provide partial support in form
provide partial support for BigInteger BigDecimal values",,5,0,3,5,0,5,0,0,0,,
"Although 1.6 compatibility is currently supported, it is not a project goal and might be removed in some future release.",,,,,,,,1,,,,,"remove  in future release
support compatibility","remove  in future release
support compatibility",,0,0,0,2,0,2,0,0,0,,
"In compliance with RFC8259 page 10 section 9, the parser is more lax with what is valid JSON then the Generator. For Example, the tab character (U+0009) is allowed when reading JSON Text strings, but when output by the Generator, the tab is properly converted to \t in the string. Other instances may occur where reading invalid JSON text does not cause an error to be generated. Malformed JSON Texts such as missing end  (quote) on strings or invalid number formats (1.2e6.3) will cause errors as such documents can not be read reliably.",,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
Some notable exceptions that the JSON Parser in this library accepts are:,,,,,,,,1,,,,,,,,0,0,0,0,0,0,0,0,0,,
Recent pull requests added a new method putAll on the JSONArray. The putAll method works similarly to other put methods in that it does not call JSONObject.wrap for items added. This can lead to inconsistent object representation in JSONArray structures.,,,,,Add method putAll,,,1,,"Add method putAll
call JSONObject.wrap",,,add new method putAll on JSONArray,add new method putAll on JSONArray,add new method putAll on JSONArray,2,0,1,1,0,1,0,1,0,,
"For example, code like this will create a mixed JSONArray, some items wrapped, others not:",Create a mixed JSONArray,Create JSONArray,,,,,Create JSONArray,0,1,Create mixed JSONArray,,Create mixed JSONArray,create mixed JSONArray,,,1,1,1,1,1,0,0,0,0,"SomeBean[] myArr = new SomeBean[]{ new SomeBean(1), new SomeBean(2) };
// these will be wrapped
JSONArray jArr = new JSONArray(myArr);
// these will not be wrapped
jArr.putAll(new SomeBean[]{ new SomeBean(3), new SomeBean(4) });",
"For structure consistency, it would be recommended that the above code is changed to look like 1 of 2 ways.",,,,,,,,1,,,,,change above code,,,0,0,0,1,0,0,0,0,0,"SomeBean[] myArr = new SomeBean[]{ new SomeBean(1), new SomeBean(2) };
JSONArray jArr = new JSONArray();
// these will not be wrapped
jArr.putAll(myArr);
// these will not be wrapped
jArr.putAll(new SomeBean[]{ new SomeBean(3), new SomeBean(4) });
// our jArr is now consistent.",
"For structure consistency, it would be recommended that the above code is changed to look like 1 of 2 ways.",,,,,,,,1,,,,,change above code,,,0,0,0,1,0,0,0,0,0,"SomeBean[] myArr = new SomeBean[]{ new SomeBean(1), new SomeBean(2) };
// these will be wrapped
JSONArray jArr = new JSONArray(myArr);
// these will be wrapped
jArr.putAll(new JSONArray(new SomeBean[]{ new SomeBean(3), new SomeBean(4) }));
// our jArr is now consistent.",
Option 1:,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
Option 2:,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
Unit Test Conventions,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
"Test filenames should consist of the name of the module being tested, with the suffix Test. For example, Cookie.java is tested by CookieTest.java.",,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
The fundamental issues with JSON-Java testing are:,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
General issues with unit testing are:,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
"JSONObject.java: The JSONObject can parse text from a String or a JSONTokener to produce a map-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant object serialization.",Parse text from String or JSONTokener to produce a map,"Parse string
Parse JSONTokener
Produce map","Parse string
Parse JSONTokener
Produce map","Parse string
Parse JSONTokener
Produce map","Parse text from a String
Parse text from JSONTokener","Parse text from a String
Parse text from JSONTokener","Parse string
Parse JSONTokener
Produce map-like object",1,0,"Parse string
Parse JSONTokener
Produce map","Parse string
Parse JSONTokener","Parse string
Parse JSONTokener
Produce map-like object","produce map-like object
provide methods for manipulating
provide methods for producing
manipulate contents
produce JSON compliant object serialization","parse text from string
parse text from JSONTokener
produce map-like object
provide methods for manipulating
provide methods for producing
manipulate contents
produce JSON compliant object serialization","parse text from string
parse text from JSONTokener
produce map-like object
manipulate contents
produce JSON compliant object serialization",3,3,0,5,1,7,3,5,3,,
"JSONArray.java: The JSONArray can parse text from a String or a JSONTokener to produce a vector-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant array serialization.",Parse text from String or JSONTokener to produce a vector,"Parse String
Parse JSONTokener
Produce Vector","Parse String
Parse JSONTokener
Produce Vector","Parse String
Parse JSONTokener
Produce Vector","Parse test from a String
Prase text from a JSONTokener","Parse test from a String
Prase text from a JSONTokener","Parse String
Parse JSONTokener
Produce Vector-like object",1,0,"Parse String
Parse JSONTokener
Produce Vector","Parse String
Parse JSONTokener","Parse String
Parse JSONTokener
Produce Vector-like object","produce vector-like object
provide methods for manipulating
provide methods for producing
manipulate contents
produce JSON compliant array serialization","parse text from String
parse text from JSONTokener
produce vector-like object
provide methods for manipulating
provide methods for producing
manipulate contents
produce JSON compliant array serialization","parse text from String
parse text from JSONTokener
produce vector-like object
manipulate contents
produce JSON compliant array serialization",3,3,1,5,0,7,3,5,3,,
"JSONTokener.java: The JSONTokener breaks a text into a sequence of individual tokens. It can be constructed from a String, Reader, or InputStream. It also can parse text from a String, Number, Boolean or null like hello, 42, true, null to produce a simple json object.",Break text into a sequence of tokens,"Break text into sequence of tokens
Parse String
Parse number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String
Parse number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String
Parse number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String 
Parse Number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String 
Parse Number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String 
Parse Number
Parse Boolean
Parse null ",1,0,"Break text into sequence of tokens
Parse String 
Parse Number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String 
Parse Number
Parse Boolean
Parse null ","Break text into sequence of tokens
Parse String 
Parse Number
Parse Boolean
Parse null ",,,,5,5,0,0,0,0,0,0,0,,
JSONException.java: The JSONException is the standard exception type thrown by this package.,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
JSONPointer.java: Implementation of JSON Pointer (RFC 6901). Supports JSON Pointers both in the form of string representation and URI fragment representation.,,,,,,,,1,,,,,,,,0,0,,0,,0,0,0,0,,
"JSONPropertyIgnore.java: Annotation class that can be used on Java Bean getter methods. When used on a bean method that would normally be serialized into a JSONObject, it overrides the getter-to-key-name logic and forces the property to be excluded from the resulting JSONObject.",,,,,Use Annotation class on Java Bean getter methods,,"Use Annotation class on Java Bean getter methods
Serialize JSONObject
Override getter-to-key-name
Exclude from resulting JSONObject",0,1,"Use Annotation class on Java Bean getter methods
Serialize JSONObject
Override getter-to-key-name
Exclude from resulting JSONObject",,Use Annotation class on Java Bean getter methods,"use annotation class on Java bean getter methods
override getter-to-key-name logic
force property
use  on bean method
exclude  from resulting JSONObject","use annotation class on Java bean getter methods
override getter-to-key-name logic
force property
use  on bean method
serialize bean method into JSONObject
exclude  from resulting JSONObject","override getter-to-key-name logic
force property
serialize bean method into JSONObject
exclude  from resulting JSONObject",4,1,3,5,1,6,1,4,0,,
"JSONPropertyName.java: Annotation class that can be used on Java Bean getter methods. When used on a bean method that would normally be serialized into a JSONObject, it overrides the getter-to-key-name logic and uses the value of the annotation. The Bean processor will look through the class hierarchy. This means you can use the annotation on a base class or interface and the value of the annotation will be used even if the getter is overridden in a child class.",,,,,Use Annotation class on Java Bean getter methods,,"Use Annotation class on Java Bean getter methods
Serialize JSONObject
Override getter-to-key-name",0,1,"Use Annotation class on Java Bean getter methods
Serialize JSONObject
Override getter-to-key-name",,Use Annotation class on Java Bean getter methods,"use annotation class on Java bean getter methods
override getter-to-key-name logic
use value of annotation
use  on bean method
use annotation on base class
use annotation on interface
override getter in child class
use value of annotation","use annotation class on Java bean getter methods
override getter-to-key-name logic
use value of annotation
use  on bean method
serialize bean method into JSONObject
use annotation on base class
use annotation on interface
override getter in child class
use value of annotation","override getter-to-key-name logic
serialize bean method into JSONObject
override getter in child class",3,1,2,8,1,9,1,3,0,,
"JSONString.java: The JSONString interface requires a toJSONString method, allowing an object to provide its own serialization.",Provide custom serialization,Provide own serialization,Provide own serialization,Provide own serialization,,,Provide own serialization,1,,Provide own serialization,Provide own serialization,Provide own serialization,provide own serialization,provide own serialization,,1,1,1,1,1,1,1,0,0,,
JSONStringer.java: The JSONStringer provides a convenient facility for building JSON strings.,Build JSON strings,Build JSON strings,Build JSON strings,Build JSON strings,Build JSON strings,Build JSON strings,Build JSON strings,1,,Build JSON strings,,Build JSON strings,provide convenient facility for building JSON strings,provide convenient facility for building JSON strings,,1,1,0,1,1,1,1,0,0,,
JSONWriter.java: The JSONWriter provides a convenient facility for building JSON text through a writer.,Build JSON strings,Build JSON text,Build JSON text,Build JSON text,Build JSON text through a writer,Build JSON text through a writer,Build JSON text through a writer,1,0,Build JSON text through a writer,,Build JSON text through a writer,provide convenient facility for building,provide convenient facility for building,,1,1,0,1,0,1,0,0,0,,
CDL.java: CDL provides support for converting between JSON and comma delimited lists.,,Convert between JSON and comma delimited lists,Convert between JSON and comma delimited lists,Convert between JSON and comma delimited lists,Convert between JSON and comma delimited lists,Convert between JSON and comma delimited lists,Convert between JSON and comma delimited lists,1,,Convert between JSON and comma delimited lists,,Convert between JSON and comma delimited lists,"provide support for converting
convert  between JSON comma delimited lists","provide support for converting
convert  between JSON comma delimited lists",convert  between JSON comma delimited lists,1,1,0,2,1,2,1,1,1,,
Cookie.java: Cookie provides support for converting between JSON and cookies.,,Convert between JSON and cookies,Convert between JSON and cookies,Convert between JSON and cookies,Convert between JSON and cookies,Convert between JSON and cookies,Convert between JSON and cookies,1,,Convert between JSON and cookies,,Convert between JSON and cookies,"provide support for converting
convert  between JSON
convert  between cookies","provide support for converting
convert  between JSON
convert  between cookies","convert  between JSON
convert  between cookies",1,1,0,3,0,3,2,2,2,,
CookieList.java: CookieList provides support for converting between JSON and cookie lists.,,Convert between JSON and cookie lists,Convert between JSON and cookie lists,Convert between JSON and cookie lists,Convert between JSON and cookie lists,Convert between JSON and cookie lists,Convert between JSON and cookie lists,1,,Convert between JSON and cookie lists,,Convert between JSON and cookie lists,"provide support for converting
convert  between JSON cookie lists","provide support for converting
convert  between JSON cookie lists",convert  between JSON cookie lists,1,1,0,2,1,2,1,1,1,,
HTTP.java: HTTP provides support for converting between JSON and HTTP headers.,,Convert between JSON and HTTP headers,Convert between JSON and HTTP headers,Convert between JSON and HTTP headers,Convert between JSON and HTTP headers,Convert between JSON and HTTP headers,Convert between JSON and HTTP headers,1,,Convert between JSON and HTTP headers,,Convert between JSON and HTTP headers,"provide support for converting
convert  between JSON HTTP headers","provide support for converting
convert  between JSON HTTP headers",convert  between JSON HTTP headers,1,1,0,2,1,2,1,1,1,,
HTTPTokener.java: HTTPTokener extends JSONTokener for parsing HTTP headers.,,Parse HTTP headers,Parse HTTP headers,Parse HTTP headers,Parse HTTP headers,Parse HTTP headers,Parse HTTP headers,1,,Parse HTTP headers,,Parse HTTP headers,extend JSONTokener for parsing HTTP headers,extend JSONTokener for parsing HTTP headers,extend JSONTokener for parsing HTTP headers,1,1,0,1,1,1,0,1,0,,
XML.java: XML provides support for converting between JSON and XML.,,Convert between JSON and XML,Convert between JSON and XML,Convert between JSON and XML,Convert between JSON and XML,Convert between JSON and XML,Convert between JSON and XML,1,,Convert between JSON and XML,,Convert between JSON and XML,"provide support for converting
convert  between JSON
convert  between XML","provide support for converting
convert  between JSON
convert  between XML","convert  between JSON
convert  between XML",1,1,0,3,0,3,2,2,2,,
JSONML.java: JSONML provides support for converting between JSONML and XML.,,Covert between JSONML and XML,Covert between JSONML and XML,Covert between JSONML and XML,Covert between JSONML and XML,Covert between JSONML and XML,Covert between JSONML and XML,1,,Covert between JSONML and XML,,Covert between JSONML and XML,"provide support for converting
convert  between JSONML
convert  between XML","provide support for converting
convert  between JSONML
convert  between XML","convert  between JSONML
convert  between XML",1,1,0,3,0,3,2,2,2,,
XMLTokener.java: XMLTokener extends JSONTokener for parsing XML text.,,Parse XML text,Parse XML text,Parse XML text,Parse XML text,Parse XML text,Parse XML text,1,,Parse XML text,,Parse XML text,extend JSONTokener for parsing,"extend JSONTokener for parsing
parse XML text","extend JSONTokener for parsing
parse XML text",1,1,0,1,0,2,1,2,1,,
JSON-java releases can be found by searching the Maven repository for groupId org.json and artifactId json. For example: https://search.maven.org/search?q=g:org.json%20AND%20a:json&core=gav,,,,,Search the Maven repository,,,1,,Search the Maven repository,,,,,,1,0,0,0,,0,,0,0,,
,,,,,,,,,,,Mechanical,,Library,domain specific,domain specific + filter,65,43,28,84,17,82,31,46,27,,
,,,,,,,,,,Precision,33.33%,,20.24%,37.80%,58.70%,,,,,,,,,,,
,,,,,,,,,,Recall,43.08%,,39.53%,72.09%,62.79%,,,,,,,,,,,