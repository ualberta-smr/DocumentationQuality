"Paragraph","Tasks"
"Components let you split the UI into independent, reusable pieces, and think about each piece in isolation. This page provides an introduction to the idea of components. You can find a detailed component API reference here.","split UI into independent reusable pieces
provide introduction to idea"
"The simplest way to define a component is to write a JavaScript function:","write JavaScript function"
"This function is a valid React component because it accepts a single “props” (which stands for properties) object argument with data and returns a React element. We call such components “function components” because they are literally JavaScript functions.","return React element"
"You can also use an ES6 class to define a component:","define component"
"When React sees an element representing a user-defined component, it passes JSX attributes and children to this component as a single object. We call this object “props”.","pass children to component
pass JSX attributes to component"
"Components can refer to other components in their output. This lets us use the same component abstraction for any level of detail. A button, a form, a dialog, a screen: in React apps, all those are commonly expressed as components.","use same component abstraction for level"
"Typically, new React apps have a single App component at the very top. However, if you integrate React into an existing app, you might start bottom-up with a small component like Button and gradually work your way to the top of the view hierarchy.","integrate React into existing app"
"Don’t be afraid to split components into smaller components.","split components into smaller components"
"The Avatar doesn’t need to know that it is being rendered inside a Comment. This is why we have given its prop a more generic name: user rather than author.","render  inside comment"
"We recommend naming props from the component’s own point of view rather than the context in which it is being used.","use context"
"Next, we will extract a UserInfo component that renders an Avatar next to the user’s name:","render UserInfo component to name"
"Extracting components might seem like grunt work at first, but having a palette of reusable components pays off in larger apps. A good rule of thumb is that if a part of your UI is used several times (Button, Panel, Avatar), or is complex enough on its own (App, FeedStory, Comment), it is a good candidate to be extracted to a separate component.","use part of UI"
"Such functions are called “pure” because they do not attempt to change their inputs, and always return the same result for the same inputs.","return same result for same inputs"
