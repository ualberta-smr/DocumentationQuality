Paragraph,Ground truth tasks,Program tasks,Partial Ratio
Create the jar file in the current directory,create jar file,create jar file in current directory,100
Execute the Test file,execute test,execute test file,100
Execute the test suite with Maven:,test maven,execute test suite with maven,70
Execute the test suite with Gradlew:,test gradlew,execute test suite with gradlew,75
"For example, code like this will create a mixed JSONArray, some items wrapped, others not:",create jsonarray,create mixed jsonarray,69
"JSONObject.java: The JSONObject can parse text from a String or a JSONTokener to produce a map-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant object serialization.","parse string, parse jsontokener, produce map",produce map-like object,48
"JSONObject.java: The JSONObject can parse text from a String or a JSONTokener to produce a map-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant object serialization.","parse string, parse jsontokener, produce map",provide methods for manipulating,38
"JSONObject.java: The JSONObject can parse text from a String or a JSONTokener to produce a map-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant object serialization.","parse string, parse jsontokener, produce map",provide methods for producing,48
"JSONObject.java: The JSONObject can parse text from a String or a JSONTokener to produce a map-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant object serialization.","parse string, parse jsontokener, produce map",manipulate contents,53
"JSONObject.java: The JSONObject can parse text from a String or a JSONTokener to produce a map-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant object serialization.","parse string, parse jsontokener, produce map",produce json compliant object serialization,37
"JSONArray.java: The JSONArray can parse text from a String or a JSONTokener to produce a vector-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant array serialization.","parse string, parse jsontokener, produce vector",produce vector-like object,54
"JSONArray.java: The JSONArray can parse text from a String or a JSONTokener to produce a vector-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant array serialization.","parse string, parse jsontokener, produce vector",provide methods for manipulating,34
"JSONArray.java: The JSONArray can parse text from a String or a JSONTokener to produce a vector-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant array serialization.","parse string, parse jsontokener, produce vector",provide methods for producing,48
"JSONArray.java: The JSONArray can parse text from a String or a JSONTokener to produce a vector-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant array serialization.","parse string, parse jsontokener, produce vector",manipulate contents,53
"JSONArray.java: The JSONArray can parse text from a String or a JSONTokener to produce a vector-like object. The object provides methods for manipulating its contents, and for producing a JSON compliant array serialization.","parse string, parse jsontokener, produce vector",produce json compliant array serialization,38
"JSONString.java: The JSONString interface requires a toJSONString method, allowing an object to provide its own serialization.",provide serialization,provide own serialization,81
JSONStringer.java: The JSONStringer provides a convenient facility for building JSON strings.,build json,provide convenient facility for building json strings,70
JSONWriter.java: The JSONWriter provides a convenient facility for building JSON text through a writer.,build json,provide convenient facility for building,60
Building from the command line,build command line
Build the class files from the package root directory src/main/java,build class files    
"JSONTokener.java: The JSONTokener breaks a text into a sequence of individual tokens. It can be constructed from a String, Reader, or InputStream. It also can parse text from a String, Number, Boolean or null like """"hello"""", 42, true, null to produce a simple json object.","parse string, parse number, parse boolean, parse null "
The JSON-Java package is a reference implementation that demonstrates how to parse JSON documents into Java objects and how to generate new JSON documents from the Java classes.,,generate new json documents from java classes
"The files in this package implement JSON encoders and decoders. The package can also convert between JSON and XML, HTTP headers, Cookies, and CDL.",,"implement json encoders,implement decoders,convert  between cdl,convert  between json,convert  between xml,convert  between http headers,convert  between cookies"
"The license includes this restriction: ""The software shall be used for good, not evil."" If your conscience cannot live with that, then choose a different package.",,"include restriction,use software,choose different package"
"Bug fixes, code improvements, and unit test coverage changes are welcome! Because this project is currently in the maintenance phase, the kinds of changes that can be accepted are limited. For more information, please read the FAQ.",,read faq for more information
"The org.json package can be built from the command line, Maven, and Gradle. The unit tests can be executed from Maven, Gradle, or individually in an IDE e.g. Eclipse.",,"execute unit tests from e.g. eclipse,execute unit tests from maven,execute unit tests from gradle"
Compile a program that uses the jar (see example code below),,"compile program,use jar,use program"
Test file contents,,test file contents
Tools to build the package and execute the unit tests,,execute unit
"Due to a recent commit - #515 Merge tests and pom and code - the structure of the project has changed from a flat directory containing all of the Java files to a directory structure that includes unit tests and several tools used to build the project jar and run the unit tests. If you have difficulty using the new structure, please open an issue so we can work through it.",,"include unit tests,include several tools,include directory structure,run unit tests,change  due_to recent commit,change  from flat directory,use new structure,open issue"
"Numeric types in this package comply with ECMA-404: The JSON Data Interchange Format and RFC 8259: The JavaScript Object Notation (JSON) Data Interchange Format. This package fully supports Integer, Long, and Double Java types. Partial support for BigInteger and BigDecimal values in JSONObject and JSONArray objects is provided in the form of get(), opt(), and put() API methods.",,"support integer,support long,support double,provide partial support in form,provide partial support for biginteger bigdecimal values"
"Although 1.6 compatibility is currently supported, it is not a project goal and might be removed in some future release.",,"remove  in future release,support compatibility"
"In compliance with RFC8259 page 10 section 9, the parser is more lax with what is valid JSON then the Generator. For Example, the tab character (U+0009) is allowed when reading JSON Text strings, but when output by the Generator, the tab is properly converted to \t in the string. Other instances may occur where reading invalid JSON text does not cause an error to be generated. Malformed JSON Texts such as missing end "" (quote) on strings or invalid number formats (1.2e6.3) will cause errors as such documents can not be read reliably.",,"read json text strings,convert output by generator,read invalid json text"
Recent pull requests added a new method putAll on the JSONArray. The putAll method works similarly to other put methods in that it does not call JSONObject.wrap for items added. This can lead to inconsistent object representation in JSONArray structures.,,add new method putall on jsonarray
"For structure consistency, it would be recommended that the above code is changed to look like 1 of 2 ways.",,change above code
"Test filenames should consist of the name of the module being tested, with the suffix ""Test"". For example, Cookie.java is tested by CookieTest.java.",,test cookie.java
"JSONTokener.java: The JSONTokener breaks a text into a sequence of individual tokens. It can be constructed from a String, Reader, or InputStream. It also can parse text from a String, Number, Boolean or null like ""hello"", 42, true, null to produce a simple json object.",,"break text into sequence,produce simple json object"
"JSONPropertyIgnore.java: Annotation class that can be used on Java Bean getter methods. When used on a bean method that would normally be serialized into a JSONObject, it overrides the getter-to-key-name logic and forces the property to be excluded from the resulting JSONObject.",,"use annotation class on java bean getter methods,override getter-to-key-name logic,force property,use  on bean method,exclude  from resulting jsonobject"
"JSONPropertyName.java: Annotation class that can be used on Java Bean getter methods. When used on a bean method that would normally be serialized into a JSONObject, it overrides the getter-to-key-name logic and uses the value of the annotation. The Bean processor will look through the class hierarchy. This means you can use the annotation on a base class or interface and the value of the annotation will be used even if the getter is overridden in a child class.",,"use annotation class on java bean getter methods,override getter-to-key-name logic,use value of annotation,use  on bean method,use annotation on base class,use annotation on interface,override getter in child class,use value of annotation"
CDL.java: CDL provides support for converting between JSON and comma delimited lists.,,"provide support for converting,convert  between json comma delimited lists"
Cookie.java: Cookie provides support for converting between JSON and cookies.,,"provide support for converting,convert  between json,convert  between cookies"
CookieList.java: CookieList provides support for converting between JSON and cookie lists.,,"provide support for converting,convert  between json cookie lists"
HTTP.java: HTTP provides support for converting between JSON and HTTP headers.,,"provide support for converting,convert  between json http headers"
HTTPTokener.java: HTTPTokener extends JSONTokener for parsing HTTP headers.,,extend jsontokener for parsing http headers
XML.java: XML provides support for converting between JSON and XML.,,"provide support for converting,convert  between json,convert  between xml"
JSONML.java: JSONML provides support for converting between JSONML and XML.,,"provide support for converting,convert  between jsonml,convert  between xml"
XMLTokener.java: XMLTokener extends JSONTokener for parsing XML text.,,extend jsontokener for parsing
"JSON-java releases can be found by searching the Maven repository for groupId ""org.json"" and artifactId ""json"". For example: https://search.maven.org/search?q=g:org.json%20AND%20a:json&core=gav",,"search maven repository for artifactid json,search maven repository for groupid org.json,find json-java releases"
