Paragraph,Example,Page
"Provides cookie persistence, connection-pooling, and configuration.",">>> import requests
>>> s = requests.Session()
>>> s.get('https://httpbin.org/get')",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"Provides cookie persistence, connection-pooling, and configuration.",">>> with requests.Session() as s:
...     s.get('https://httpbin.org/get')",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"Used to prepare a PreparedRequest, which is sent to the server.",">>> import requests
>>> req = requests.Request('GET', 'https://httpbin.org/get')
>>> req.prepare()",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"Instances are generated from a Request object, and
should not be instantiated manually; doing so may produce undesirable
effects.",">>> import requests
>>> req = requests.Request('GET', 'https://httpbin.org/get')
>>> r = req.prepare()
>>> r


>>> s = requests.Session()
>>> s.send(r)",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"Provides a general-case interface for Requests sessions to contact HTTP and
HTTPS urls by implementing the Transport Adapter interface. This class will
usually be created by the Session class under the
covers.",">>> import requests
>>> s = requests.Session()
>>> a = requests.adapters.HTTPAdapter(max_retries=3)
>>> s.mount('http://', a)",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"The codes object defines a mapping from common names for HTTP statuses
to their numerical codes, accessible either as attributes or as dictionary
items.",">>> import requests
>>> requests.codes['temporary_redirect']
307
>>> requests.codes.teapot
418
>>> requests.codes['\o/']
200",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"The Session API has changed. Sessions objects no longer take parameters.
Session is also now capitalized, but it can still be
instantiated with a lowercase session for backwards compatibility.","s = requests.Session()    # formerly, session took parameters
s.auth = auth
s.headers.update(headers)
r = s.get('https://httpbin.org/headers')",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"The parameter for streaming requests was changed from prefetch to
stream and the logic was inverted. In addition, stream is now
required for raw response reading.","# in 0.x, passing prefetch=False would accomplish the same thing
r = requests.get('https://api.github.com/events', stream=True)
for chunk in r.iter_content(8192):
    ...",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"The config parameter to the requests method has been removed. Some of
these options are now configured on a Session such as keep-alive and
maximum number of redirects. The verbosity option should be handled by
configuring logging.","import requests
import logging

# Enabling debugging at http.client level (requests->urllib3->http.client)
# you will see the REQUEST, including HEADERS and DATA, and RESPONSE with HEADERS but without DATA.
# the only thing missing will be the response.body which is not logged.
try: # for Python 3
    from http.client import HTTPConnection
except ImportError:
    from httplib import HTTPConnection
HTTPConnection.debuglevel = 1

logging.basicConfig() # you need to initialize logging, otherwise you will not see anything from requests
logging.getLogger().setLevel(logging.DEBUG)
requests_log = logging.getLogger(""urllib3"")
requests_log.setLevel(logging.DEBUG)
requests_log.propagate = True

requests.get('https://httpbin.org/headers')",https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
"There were a couple changes to how Requests handles exceptions.
RequestException is now a subclass of IOError rather than
RuntimeError as that more accurately categorizes the type of error.
In addition, an invalid URL escape sequence now raises a subclass of
RequestException rather than a ValueError.",requests.get('http://%zz/')   # raises requests.exceptions.InvalidURL,https://web.archive.org/web/20220505163814/https://requests.readthedocs.io/en/latest/api/
