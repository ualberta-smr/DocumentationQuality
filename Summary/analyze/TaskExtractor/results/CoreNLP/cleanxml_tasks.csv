"Paragraph","Tasks"
"This annotator removes XML tags from an input document. Stanford CoreNLP has the ability to remove all or most XML tags from a document before processing it. This functionality is provided by a finite automaton. It works fine for typical, simple XML, but complex constructions and CDATA sections will not be correctly handled. If you want full and correct handling of XML, then you should run XML documents through an XML parser (such as the one included standard in Java) before passing appropriate text nodes to Stanford CoreNLP. However, then you are unable to recover character offsets in the original XML text file.","remove XML tags from input document
remove most XML tags before processing
remove most XML tags from document
run XML documents through XML parser
run XML documents before passing
pass appropriate text nodes to Stanford CoreNLP"
"The cleanxml annotator supports many complex processing options: You can choose to only delete some XML tags, to treat certain XML tags as sentence ending, as marking the speaker in a dialog, etc. You can also extract document metadata from XML attributes. The cleanxml annotator can be placed after tokenize in processing order.","support many complex processing options
delete XML tags
mark speaker in dialog
extract document metadata from XML attributes
place cleanxml annotator after tokenize"
"Stanford CoreNLP deletes the XML tags and generates output that is basically the same as for the default input.txt example. The only difference between this and the original output is a change in CharacterOffsets.","delete XML tags"
"Example 2: For some simple text files, the structure is basically just paragraphs contained in  elements. Then one might use a command like:","use command"
"Example 3: For a somewhat more complex newspaper XML page, the title is in a  element and the text of the article is in  elements, but there are also a bunch of other elements for tracking, ads, etc. to be deleted, and one wants to treat the end of the above two elements as also being a sentence boundary. Finally, the article was published on 2020-05-23. One might use a command like:","use command"
"Note that although the annotator is called “cleanxml” in the annotators list, the prefix for options is just “clean”. We should probably regularize this at some point…. Also, the option names are case sensitive, so get them right!","call annotator in annotators list"
"Here is an example of setting many of these options in order to access information from an XML file that is similar to the LDC MPDF (multi-post discussion forum) XML format.","set  from XML file
set  to access information"
"Here is the part of the JSON file output by that command, showing the section information. Information about quotes is not (yet) in out JSON output.","show section information"
