Paragraph,Example,Page
"The cleanxml annotator supports many complex processing options: You can choose to only delete some XML tags, to treat certain XML tags as sentence ending, as marking the speaker in a dialog, etc. You can also extract document metadata from XML attributes. The cleanxml annotator can be placed after tokenize in processing order.","annotators = tokenize, cleanxml, ssplit, pos, lemma, ner, parse, coref",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
"Example 2: For some simple text files, the structure is basically just paragraphs contained in  elements. Then one might use a command like:","java edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators
tokenize,cleanxml,ssplit,pos,lemma,ner,parse,coref,quote -file
news-story.txt -outputFormat json -clean.sentenceendingtags p",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
"Example 3: For a somewhat more complex newspaper XML page, the title is in a  element and the text of the article is in  elements, but there are also a bunch of other elements for tracking, ads, etc. to be deleted, and one wants to treat the end of the above two elements as also being a sentence boundary. Finally, the article was published on 2020-05-23. One might use a command like:","java -cp ""*"" edu.stanford.nlp.pipeline.StanfordCoreNLP -file wapo-coronavirus.txt
  -annotators ""tokenize, cleanxml, ssplit, pos, lemma, ner, depparse, coref, quote""
  -outputFormat xml -clean.sentenceendingtags ""p|h1"" -clean.xmltags ""p|h1""
  -ner.docdate.useFixedDate 2020-05-23",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
Here is an example of setting many of these options in order to access information from an XML file that is similar to the LDC MPDF (multi-post discussion forum) XML format.,"Worth looking in to?


Yesterday afternoon as I negotiated route 149 from Lake George to Fort Ann in NY I passed a new diner that had opened that day. I didnt notice the name but out side it had a Union Jack and a St Georges flag flying
I wonder if they serve proper 'English' food, served by proper 'English' people ? I may have to check it out asap 



Yesterday afternoon as I negotiated route 149 from Lake George to Fort Ann in NY I passed a new diner that had opened that day. I didnt notice the name but out side it had a Union Jack and a St Georges flag flying
I wonder if they serve proper 'English' food, served by proper 'English' people ? I may have to check it out asap 

If they don't have english food and beer...tell em they've got a bloody cheek flying the flags and luring un-suspecting expats in....little buggers... 



Yesterday afternoon as I negotiated route 149 from Lake George to Fort Ann in NY I passed a new diner that had opened that day. I didnt notice the name but out side it had a Union Jack and a St Georges flag flying
I wonder if they serve proper 'English' food, served by proper 'English' people ? I may have to check it out asap 

Halal?



Halal?

Tandoori.",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
Here is an example of setting many of these options in order to access information from an XML file that is similar to the LDC MPDF (multi-post discussion forum) XML format.,"clean.xmltags = headline|dateline|text|post
clean.singlesentencetags = HEADLINE|DATELINE|SPEAKER|POSTER|POSTDATE
clean.sentenceendingtags = P|POST|QUOTE
clean.turntags = TURN|POST|QUOTE
clean.speakertags = SPEAKER|POSTER
clean.docIdtags = DOCID
clean.datetags = DATETIME|DATE|DATELINE
clean.doctypetags = DOCTYPE
clean.docAnnotations = docID=doc[id],doctype=doc[type],docsourcetype=doctype[source]
clean.sectiontags = HEADLINE|DATELINE|POST
clean.sectionAnnotations = sectionID=post[id],sectionDate=post[date|datetime],sectionDate=postdate,author=post[author],author=poster
clean.quotetags = quote
clean.quoteauthorattributes = orig_author
clean.tokenAnnotations = link=a[href],speaker=post[author],speaker=quote[orig_author]
clean.ssplitDiscardTokens = \\n|\\*NL\\*",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
Here is an example of setting many of these options in order to access information from an XML file that is similar to the LDC MPDF (multi-post discussion forum) XML format.,"package edu.stanford.nlp.examples;

import edu.stanford.nlp.ling.*;
import edu.stanford.nlp.io.*;
import edu.stanford.nlp.pipeline.*;
import edu.stanford.nlp.util.*;

import java.util.*;
import java.util.stream.Collectors;


public class ForumPostExample {

  public static void main(String args[]) {
    // properties
    Properties props = StringUtils.argsToProperties(""-props"", args[0]);
    // set up pipeline
    StanfordCoreNLP pipeline = new StanfordCoreNLP(props);
    // set up document
    Annotation testDocument = new Annotation(IOUtils.stringFromFile(args[1]));
    // annotate document
    pipeline.annotate(testDocument);
    // print out the forum posts
    for (CoreMap discussionForumPost : testDocument.get(CoreAnnotations.SectionsAnnotation.class)) {
      System.err.println(""---"");
      System.err.println(""author: "" + discussionForumPost.get(CoreAnnotations.AuthorAnnotation.class));
      System.err.println(""date: "" +
          discussionForumPost.get(CoreAnnotations.SectionDateAnnotation.class));
      System.err.println(""char begin: "" +
          discussionForumPost.get(CoreAnnotations.CharacterOffsetBeginAnnotation.class));
      System.err.println(""char end: "" +
          discussionForumPost.get(CoreAnnotations.CharacterOffsetEndAnnotation.class));
      System.err.println(""author start offset: "" +
          discussionForumPost.get(CoreAnnotations.SectionAuthorCharacterOffsetBeginAnnotation.class));
      System.err.println(""author end offset: "" +
          discussionForumPost.get(CoreAnnotations.SectionAuthorCharacterOffsetEndAnnotation.class));
      System.err.println(""section start tag: "" +
          discussionForumPost.get(CoreAnnotations.SectionTagAnnotation.class));
      // print out the sentences
      System.err.println(""sentences: "");
      for (CoreMap sentence : discussionForumPost.get(CoreAnnotations.SentencesAnnotation.class)) {
        System.err.println(""\t***"");
        boolean sentenceQuoted = (sentence.get(CoreAnnotations.QuotedAnnotation.class) != null) &&
            sentence.get(CoreAnnotations.QuotedAnnotation.class);
        String sentenceAuthor = sentence.get(CoreAnnotations.AuthorAnnotation.class);
        String potentialQuoteText = sentenceQuoted ? ""(QUOTING: ""+sentenceAuthor+"")"" : """" ;
        System.err.println(""\t"" + potentialQuoteText + "" "" +
            sentence.get(CoreAnnotations.TokensAnnotation.class).stream().
            map(token -> token.word()).collect(Collectors.joining("" "")));
      }
    }
  }
}",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
Here is an example of setting many of these options in order to access information from an XML file that is similar to the LDC MPDF (multi-post discussion forum) XML format.,"java -mx1g -cp ""*"" edu.stanford.nlp.pipeline.StanfordCoreNLP -props cleanxml.properties -annotatrs tokenize,cleanxml,ssplit -file DF-sample.xml -outputFormat json",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
"Here is the part of the JSON file output by that command, showing the section information. Information about quotes is not (yet) in out JSON output.","""sections"": [
    {
      ""charBegin"": 40,
      ""charEnd"": 60,
      ""sentenceIndexes"": [
        {
          ""index"": 0
        }
      ]
    },
    {
      ""charBegin"": 139,
      ""charEnd"": 466,
      ""author"": ""JamesÂ Rood"",
      ""dateTime"": ""2010-05-29T17:14:00"",
      ""sentenceIndexes"": [
        {
          ""index"": 1
        }
      ]
    },
    {
      ""charBegin"": 637,
      ""charEnd"": 1192,
      ""author"": ""UDDep"",
      ""dateTime"": ""2010-05-30T15:43:00"",
      ""sentenceIndexes"": [
        {
          ""index"": 2
        },
        {
          ""index"": 3
        },
        {
          ""index"": 4
        },
        {
          ""index"": 5
        }
      ]
    },
    {
      ""charBegin"": 1365,
      ""charEnd"": 1776,
      ""author"": ""Mack67"",
      ""dateTime"": ""2010-05-30T18:23:00"",
      ""sentenceIndexes"": [
        {
          ""index"": 6
        },
        {
          ""index"": 7
        },
        {
          ""index"": 8
        },
        {
          ""index"": 9
        }
      ]
    },
    {
      ""charBegin"": 1877,
      ""charEnd"": 1902,
      ""author"": ""cherise"",
      ""dateTime"": ""2010-05-30T20:02:00"",
      ""sentenceIndexes"": [
        {
          ""index"": 10
        },
        {
          ""index"": 11
        }
      ]
    }
  ]",https://stanfordnlp.github.io/CoreNLP/cleanxml.html
