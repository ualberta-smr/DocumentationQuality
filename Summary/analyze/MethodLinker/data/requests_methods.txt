{   'AuthBase.__call__': {   'opt_args': [],
                             'req_args': ['r'],
                             'source_file': 'requests\\requests\\auth.py'},
    'BaseAdapter.__init__': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\adapters.py'},
    'BaseAdapter.close': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\adapters.py'},
    'BaseAdapter.send': {   'opt_args': [   'proxies',
                                            'cert',
                                            'verify',
                                            'timeout',
                                            'stream'],
                            'req_args': ['request'],
                            'source_file': 'requests\\requests\\adapters.py'},
    'CaseInsensitiveDict.__delitem__': {   'opt_args': [],
                                           'req_args': ['key'],
                                           'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__eq__': {   'opt_args': [],
                                      'req_args': ['other'],
                                      'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__getitem__': {   'opt_args': [],
                                           'req_args': ['key'],
                                           'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__init__': {   'opt_args': ['data', 'kwargs'],
                                        'req_args': [],
                                        'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__iter__': {   'opt_args': [],
                                        'req_args': [],
                                        'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__len__': {   'opt_args': [],
                                       'req_args': [],
                                       'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__repr__': {   'opt_args': [],
                                        'req_args': [],
                                        'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.__setitem__': {   'opt_args': [],
                                           'req_args': ['value', 'key'],
                                           'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.copy': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\structures.py'},
    'CaseInsensitiveDict.lower_items': {   'opt_args': [],
                                           'req_args': [],
                                           'source_file': 'requests\\requests\\structures.py'},
    'HTTPAdapter.__getstate__': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.__init__': {   'opt_args': [   'pool_block',
                                                'max_retries',
                                                'pool_maxsize',
                                                'pool_connections'],
                                'req_args': [],
                                'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.__setstate__': {   'opt_args': [],
                                    'req_args': ['state'],
                                    'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.add_headers': {   'opt_args': ['kwargs'],
                                   'req_args': ['request'],
                                   'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.build_response': {   'opt_args': [],
                                      'req_args': ['resp', 'req'],
                                      'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.cert_verify': {   'opt_args': [],
                                   'req_args': [   'cert',
                                                   'verify',
                                                   'url',
                                                   'conn'],
                                   'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.close': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.get_connection': {   'opt_args': ['proxies'],
                                      'req_args': ['url'],
                                      'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.init_poolmanager': {   'opt_args': ['block', 'pool_kwargs'],
                                        'req_args': ['maxsize', 'connections'],
                                        'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.proxy_headers': {   'opt_args': [],
                                     'req_args': ['proxy'],
                                     'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.proxy_manager_for': {   'opt_args': ['proxy_kwargs'],
                                         'req_args': ['proxy'],
                                         'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.request_url': {   'opt_args': [],
                                   'req_args': ['proxies', 'request'],
                                   'source_file': 'requests\\requests\\adapters.py'},
    'HTTPAdapter.send': {   'opt_args': [   'proxies',
                                            'cert',
                                            'verify',
                                            'timeout',
                                            'stream'],
                            'req_args': ['request'],
                            'source_file': 'requests\\requests\\adapters.py'},
    'HTTPBasicAuth.__call__': {   'opt_args': [],
                                  'req_args': ['r'],
                                  'source_file': 'requests\\requests\\auth.py'},
    'HTTPBasicAuth.__eq__': {   'opt_args': [],
                                'req_args': ['other'],
                                'source_file': 'requests\\requests\\auth.py'},
    'HTTPBasicAuth.__init__': {   'opt_args': [],
                                  'req_args': ['password', 'username'],
                                  'source_file': 'requests\\requests\\auth.py'},
    'HTTPBasicAuth.__ne__': {   'opt_args': [],
                                'req_args': ['other'],
                                'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.__call__': {   'opt_args': [],
                                   'req_args': ['r'],
                                   'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.__eq__': {   'opt_args': [],
                                 'req_args': ['other'],
                                 'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.__init__': {   'opt_args': [],
                                   'req_args': ['password', 'username'],
                                   'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.__ne__': {   'opt_args': [],
                                 'req_args': ['other'],
                                 'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.build_digest_header': {   'opt_args': [],
                                              'req_args': ['url', 'method'],
                                              'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.handle_401': {   'opt_args': ['kwargs'],
                                     'req_args': ['r'],
                                     'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.handle_redirect': {   'opt_args': ['kwargs'],
                                          'req_args': ['r'],
                                          'source_file': 'requests\\requests\\auth.py'},
    'HTTPDigestAuth.init_per_thread_state': {   'opt_args': [],
                                                'req_args': [],
                                                'source_file': 'requests\\requests\\auth.py'},
    'HTTPProxyAuth.__call__': {   'opt_args': [],
                                  'req_args': ['r'],
                                  'source_file': 'requests\\requests\\auth.py'},
    'JSONDecodeError.__init__': {   'opt_args': ['kwargs'],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\exceptions.py'},
    'LookupDict.__getitem__': {   'opt_args': [],
                                  'req_args': ['key'],
                                  'source_file': 'requests\\requests\\structures.py'},
    'LookupDict.__init__': {   'opt_args': ['name'],
                               'req_args': [],
                               'source_file': 'requests\\requests\\structures.py'},
    'LookupDict.__repr__': {   'opt_args': [],
                               'req_args': [],
                               'source_file': 'requests\\requests\\structures.py'},
    'LookupDict.get': {   'opt_args': ['default'],
                          'req_args': ['key'],
                          'source_file': 'requests\\requests\\structures.py'},
    'MockRequest.__init__': {   'opt_args': [],
                                'req_args': ['request'],
                                'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.add_header': {   'opt_args': [],
                                  'req_args': ['val', 'key'],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.add_unredirected_header': {   'opt_args': [],
                                               'req_args': ['value', 'name'],
                                               'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.get_full_url': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.get_header': {   'opt_args': ['default'],
                                  'req_args': ['name'],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.get_host': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.get_new_headers': {   'opt_args': [],
                                       'req_args': [],
                                       'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.get_origin_req_host': {   'opt_args': [],
                                           'req_args': [],
                                           'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.get_type': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.has_header': {   'opt_args': [],
                                  'req_args': ['name'],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.host': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.is_unverifiable': {   'opt_args': [],
                                       'req_args': [],
                                       'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.origin_req_host': {   'opt_args': [],
                                       'req_args': [],
                                       'source_file': 'requests\\requests\\cookies.py'},
    'MockRequest.unverifiable': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\cookies.py'},
    'MockResponse.__init__': {   'opt_args': [],
                                 'req_args': ['headers'],
                                 'source_file': 'requests\\requests\\cookies.py'},
    'MockResponse.getheaders': {   'opt_args': [],
                                   'req_args': ['name'],
                                   'source_file': 'requests\\requests\\cookies.py'},
    'MockResponse.info': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\cookies.py'},
    'PreparedRequest.__init__': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.__repr__': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.copy': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare': {   'opt_args': [   'json',
                                                   'hooks',
                                                   'cookies',
                                                   'auth',
                                                   'params',
                                                   'data',
                                                   'files',
                                                   'headers',
                                                   'url',
                                                   'method'],
                                   'req_args': [],
                                   'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_auth': {   'opt_args': ['url'],
                                        'req_args': ['auth'],
                                        'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_body': {   'opt_args': ['json'],
                                        'req_args': ['files', 'data'],
                                        'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_content_length': {   'opt_args': [],
                                                  'req_args': ['body'],
                                                  'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_cookies': {   'opt_args': [],
                                           'req_args': ['cookies'],
                                           'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_headers': {   'opt_args': [],
                                           'req_args': ['headers'],
                                           'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_hooks': {   'opt_args': [],
                                         'req_args': ['hooks'],
                                         'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_method': {   'opt_args': [],
                                          'req_args': ['method'],
                                          'source_file': 'requests\\requests\\models.py'},
    'PreparedRequest.prepare_url': {   'opt_args': [],
                                       'req_args': ['params', 'url'],
                                       'source_file': 'requests\\requests\\models.py'},
    'PyTest.finalize_options': {   'opt_args': [],
                                   'req_args': [],
                                   'source_file': 'requests\\setup.py'},
    'PyTest.initialize_options': {   'opt_args': [],
                                     'req_args': [],
                                     'source_file': 'requests\\setup.py'},
    'PyTest.run_tests': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\setup.py'},
    'Request.__init__': {   'opt_args': [   'json',
                                            'hooks',
                                            'cookies',
                                            'auth',
                                            'params',
                                            'data',
                                            'files',
                                            'headers',
                                            'url',
                                            'method'],
                            'req_args': [],
                            'source_file': 'requests\\requests\\models.py'},
    'Request.__repr__': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\requests\\models.py'},
    'Request.prepare': {   'opt_args': [],
                           'req_args': [],
                           'source_file': 'requests\\requests\\models.py'},
    'RequestEncodingMixin.path_url': {   'opt_args': [],
                                         'req_args': [],
                                         'source_file': 'requests\\requests\\models.py'},
    'RequestException.__init__': {   'opt_args': ['kwargs'],
                                     'req_args': [],
                                     'source_file': 'requests\\requests\\exceptions.py'},
    'RequestHooksMixin.deregister_hook': {   'opt_args': [],
                                             'req_args': ['hook', 'event'],
                                             'source_file': 'requests\\requests\\models.py'},
    'RequestHooksMixin.register_hook': {   'opt_args': [],
                                           'req_args': ['hook', 'event'],
                                           'source_file': 'requests\\requests\\models.py'},
    'RequestsCookieJar.__contains__': {   'opt_args': [],
                                          'req_args': ['name'],
                                          'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.__delitem__': {   'opt_args': [],
                                         'req_args': ['name'],
                                         'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.__getitem__': {   'opt_args': [],
                                         'req_args': ['name'],
                                         'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.__getstate__': {   'opt_args': [],
                                          'req_args': [],
                                          'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.__setitem__': {   'opt_args': [],
                                         'req_args': ['value', 'name'],
                                         'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.__setstate__': {   'opt_args': [],
                                          'req_args': ['state'],
                                          'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.copy': {   'opt_args': [],
                                  'req_args': [],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.get': {   'opt_args': ['path', 'domain', 'default'],
                                 'req_args': ['name'],
                                 'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.get_dict': {   'opt_args': ['path', 'domain'],
                                      'req_args': [],
                                      'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.get_policy': {   'opt_args': [],
                                        'req_args': [],
                                        'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.items': {   'opt_args': [],
                                   'req_args': [],
                                   'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.iteritems': {   'opt_args': [],
                                       'req_args': [],
                                       'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.iterkeys': {   'opt_args': [],
                                      'req_args': [],
                                      'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.itervalues': {   'opt_args': [],
                                        'req_args': [],
                                        'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.keys': {   'opt_args': [],
                                  'req_args': [],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.list_domains': {   'opt_args': [],
                                          'req_args': [],
                                          'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.list_paths': {   'opt_args': [],
                                        'req_args': [],
                                        'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.multiple_domains': {   'opt_args': [],
                                              'req_args': [],
                                              'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.set': {   'opt_args': ['kwargs'],
                                 'req_args': ['value', 'name'],
                                 'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.set_cookie': {   'opt_args': ['kwargs'],
                                        'req_args': ['cookie'],
                                        'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.update': {   'opt_args': [],
                                    'req_args': ['other'],
                                    'source_file': 'requests\\requests\\cookies.py'},
    'RequestsCookieJar.values': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\cookies.py'},
    'Response.__bool__': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\models.py'},
    'Response.__enter__': {   'opt_args': [],
                              'req_args': [],
                              'source_file': 'requests\\requests\\models.py'},
    'Response.__exit__': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\models.py'},
    'Response.__getstate__': {   'opt_args': [],
                                 'req_args': [],
                                 'source_file': 'requests\\requests\\models.py'},
    'Response.__init__': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\models.py'},
    'Response.__iter__': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\models.py'},
    'Response.__nonzero__': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\models.py'},
    'Response.__repr__': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\models.py'},
    'Response.__setstate__': {   'opt_args': [],
                                 'req_args': ['state'],
                                 'source_file': 'requests\\requests\\models.py'},
    'Response.apparent_encoding': {   'opt_args': [],
                                      'req_args': [],
                                      'source_file': 'requests\\requests\\models.py'},
    'Response.close': {   'opt_args': [],
                          'req_args': [],
                          'source_file': 'requests\\requests\\models.py'},
    'Response.content': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\requests\\models.py'},
    'Response.is_permanent_redirect': {   'opt_args': [],
                                          'req_args': [],
                                          'source_file': 'requests\\requests\\models.py'},
    'Response.is_redirect': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\models.py'},
    'Response.iter_content': {   'opt_args': ['decode_unicode', 'chunk_size'],
                                 'req_args': [],
                                 'source_file': 'requests\\requests\\models.py'},
    'Response.iter_lines': {   'opt_args': [   'delimiter',
                                               'decode_unicode',
                                               'chunk_size'],
                               'req_args': [],
                               'source_file': 'requests\\requests\\models.py'},
    'Response.json': {   'opt_args': ['kwargs'],
                         'req_args': [],
                         'source_file': 'requests\\requests\\models.py'},
    'Response.links': {   'opt_args': [],
                          'req_args': [],
                          'source_file': 'requests\\requests\\models.py'},
    'Response.next': {   'opt_args': [],
                         'req_args': [],
                         'source_file': 'requests\\requests\\models.py'},
    'Response.ok': {   'opt_args': [],
                       'req_args': [],
                       'source_file': 'requests\\requests\\models.py'},
    'Response.raise_for_status': {   'opt_args': [],
                                     'req_args': [],
                                     'source_file': 'requests\\requests\\models.py'},
    'Response.text': {   'opt_args': [],
                         'req_args': [],
                         'source_file': 'requests\\requests\\models.py'},
    'Session.__enter__': {   'opt_args': [],
                             'req_args': [],
                             'source_file': 'requests\\requests\\sessions.py'},
    'Session.__exit__': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\requests\\sessions.py'},
    'Session.__getstate__': {   'opt_args': [],
                                'req_args': [],
                                'source_file': 'requests\\requests\\sessions.py'},
    'Session.__init__': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\requests\\sessions.py'},
    'Session.__setstate__': {   'opt_args': [],
                                'req_args': ['state'],
                                'source_file': 'requests\\requests\\sessions.py'},
    'Session.close': {   'opt_args': [],
                         'req_args': [],
                         'source_file': 'requests\\requests\\sessions.py'},
    'Session.delete': {   'opt_args': ['kwargs'],
                          'req_args': ['url'],
                          'source_file': 'requests\\requests\\sessions.py'},
    'Session.get': {   'opt_args': ['kwargs'],
                       'req_args': ['url'],
                       'source_file': 'requests\\requests\\sessions.py'},
    'Session.get_adapter': {   'opt_args': [],
                               'req_args': ['url'],
                               'source_file': 'requests\\requests\\sessions.py'},
    'Session.head': {   'opt_args': ['kwargs'],
                        'req_args': ['url'],
                        'source_file': 'requests\\requests\\sessions.py'},
    'Session.merge_environment_settings': {   'opt_args': [],
                                              'req_args': [   'cert',
                                                              'verify',
                                                              'stream',
                                                              'proxies',
                                                              'url'],
                                              'source_file': 'requests\\requests\\sessions.py'},
    'Session.mount': {   'opt_args': [],
                         'req_args': ['adapter', 'prefix'],
                         'source_file': 'requests\\requests\\sessions.py'},
    'Session.options': {   'opt_args': ['kwargs'],
                           'req_args': ['url'],
                           'source_file': 'requests\\requests\\sessions.py'},
    'Session.patch': {   'opt_args': ['data', 'kwargs'],
                         'req_args': ['url'],
                         'source_file': 'requests\\requests\\sessions.py'},
    'Session.post': {   'opt_args': ['json', 'data', 'kwargs'],
                        'req_args': ['url'],
                        'source_file': 'requests\\requests\\sessions.py'},
    'Session.prepare_request': {   'opt_args': [],
                                   'req_args': ['request'],
                                   'source_file': 'requests\\requests\\sessions.py'},
    'Session.put': {   'opt_args': ['data', 'kwargs'],
                       'req_args': ['url'],
                       'source_file': 'requests\\requests\\sessions.py'},
    'Session.request': {   'opt_args': [   'json',
                                           'cert',
                                           'verify',
                                           'stream',
                                           'hooks',
                                           'proxies',
                                           'allow_redirects',
                                           'timeout',
                                           'auth',
                                           'files',
                                           'cookies',
                                           'headers',
                                           'data',
                                           'params'],
                           'req_args': ['url', 'method'],
                           'source_file': 'requests\\requests\\sessions.py'},
    'Session.send': {   'opt_args': ['kwargs'],
                        'req_args': ['request'],
                        'source_file': 'requests\\requests\\sessions.py'},
    'SessionRedirectMixin.get_redirect_target': {   'opt_args': [],
                                                    'req_args': ['resp'],
                                                    'source_file': 'requests\\requests\\sessions.py'},
    'SessionRedirectMixin.rebuild_auth': {   'opt_args': [],
                                             'req_args': [   'response',
                                                             'prepared_request'],
                                             'source_file': 'requests\\requests\\sessions.py'},
    'SessionRedirectMixin.rebuild_method': {   'opt_args': [],
                                               'req_args': [   'response',
                                                               'prepared_request'],
                                               'source_file': 'requests\\requests\\sessions.py'},
    'SessionRedirectMixin.rebuild_proxies': {   'opt_args': [],
                                                'req_args': [   'proxies',
                                                                'prepared_request'],
                                                'source_file': 'requests\\requests\\sessions.py'},
    'SessionRedirectMixin.resolve_redirects': {   'opt_args': [   'yield_requests',
                                                                  'proxies',
                                                                  'cert',
                                                                  'verify',
                                                                  'timeout',
                                                                  'stream',
                                                                  'adapter_kwargs'],
                                                  'req_args': ['req', 'resp'],
                                                  'source_file': 'requests\\requests\\sessions.py'},
    'SessionRedirectMixin.should_strip_auth': {   'opt_args': [],
                                                  'req_args': [   'new_url',
                                                                  'old_url'],
                                                  'source_file': 'requests\\requests\\sessions.py'},
    'requests.add_dict_to_cookiejar': {   'opt_args': [],
                                          'req_args': ['cookie_dict', 'cj'],
                                          'source_file': 'requests\\requests\\utils.py'},
    'requests.address_in_network': {   'opt_args': [],
                                       'req_args': ['net', 'ip'],
                                       'source_file': 'requests\\requests\\utils.py'},
    'requests.atomic_open': {   'opt_args': [],
                                'req_args': ['filename'],
                                'source_file': 'requests\\requests\\utils.py'},
    'requests.check_compatibility': {   'opt_args': [],
                                        'req_args': [   'charset_normalizer_version',
                                                        'chardet_version',
                                                        'urllib3_version'],
                                        'source_file': 'requests\\requests\\__init__.py'},
    'requests.check_header_validity': {   'opt_args': [],
                                          'req_args': ['header'],
                                          'source_file': 'requests\\requests\\utils.py'},
    'requests.cookiejar_from_dict': {   'opt_args': ['overwrite', 'cookiejar'],
                                        'req_args': ['cookie_dict'],
                                        'source_file': 'requests\\requests\\cookies.py'},
    'requests.create_cookie': {   'opt_args': ['kwargs'],
                                  'req_args': ['value', 'name'],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'requests.default_headers': {   'opt_args': [],
                                    'req_args': [],
                                    'source_file': 'requests\\requests\\utils.py'},
    'requests.default_hooks': {   'opt_args': [],
                                  'req_args': [],
                                  'source_file': 'requests\\requests\\hooks.py'},
    'requests.default_user_agent': {   'opt_args': ['name'],
                                       'req_args': [],
                                       'source_file': 'requests\\requests\\utils.py'},
    'requests.delete': {   'opt_args': ['kwargs'],
                           'req_args': ['url'],
                           'source_file': 'requests\\requests\\api.py'},
    'requests.dict_from_cookiejar': {   'opt_args': [],
                                        'req_args': ['cj'],
                                        'source_file': 'requests\\requests\\utils.py'},
    'requests.dict_to_sequence': {   'opt_args': [],
                                     'req_args': ['d'],
                                     'source_file': 'requests\\requests\\utils.py'},
    'requests.dispatch_hook': {   'opt_args': ['kwargs'],
                                  'req_args': ['hook_data', 'hooks', 'key'],
                                  'source_file': 'requests\\requests\\hooks.py'},
    'requests.dotted_netmask': {   'opt_args': [],
                                   'req_args': ['mask'],
                                   'source_file': 'requests\\requests\\utils.py'},
    'requests.extract_cookies_to_jar': {   'opt_args': [],
                                           'req_args': [   'response',
                                                           'request',
                                                           'jar'],
                                           'source_file': 'requests\\requests\\cookies.py'},
    'requests.extract_zipped_paths': {   'opt_args': [],
                                         'req_args': ['path'],
                                         'source_file': 'requests\\requests\\utils.py'},
    'requests.from_key_val_list': {   'opt_args': [],
                                      'req_args': ['value'],
                                      'source_file': 'requests\\requests\\utils.py'},
    'requests.get': {   'opt_args': ['params', 'kwargs'],
                        'req_args': ['url'],
                        'source_file': 'requests\\requests\\api.py'},
    'requests.get_auth_from_url': {   'opt_args': [],
                                      'req_args': ['url'],
                                      'source_file': 'requests\\requests\\utils.py'},
    'requests.get_cookie_header': {   'opt_args': [],
                                      'req_args': ['request', 'jar'],
                                      'source_file': 'requests\\requests\\cookies.py'},
    'requests.get_encoding_from_headers': {   'opt_args': [],
                                              'req_args': ['headers'],
                                              'source_file': 'requests\\requests\\utils.py'},
    'requests.get_encodings_from_content': {   'opt_args': [],
                                               'req_args': ['content'],
                                               'source_file': 'requests\\requests\\utils.py'},
    'requests.get_environ_proxies': {   'opt_args': ['no_proxy'],
                                        'req_args': ['url'],
                                        'source_file': 'requests\\requests\\utils.py'},
    'requests.get_netrc_auth': {   'opt_args': ['raise_errors'],
                                   'req_args': ['url'],
                                   'source_file': 'requests\\requests\\utils.py'},
    'requests.get_unicode_from_response': {   'opt_args': [],
                                              'req_args': ['r'],
                                              'source_file': 'requests\\requests\\utils.py'},
    'requests.guess_filename': {   'opt_args': [],
                                   'req_args': ['obj'],
                                   'source_file': 'requests\\requests\\utils.py'},
    'requests.guess_json_utf': {   'opt_args': [],
                                   'req_args': ['data'],
                                   'source_file': 'requests\\requests\\utils.py'},
    'requests.head': {   'opt_args': ['kwargs'],
                         'req_args': ['url'],
                         'source_file': 'requests\\requests\\api.py'},
    'requests.info': {   'opt_args': [],
                         'req_args': [],
                         'source_file': 'requests\\requests\\help.py'},
    'requests.is_ipv4_address': {   'opt_args': [],
                                    'req_args': ['string_ip'],
                                    'source_file': 'requests\\requests\\utils.py'},
    'requests.is_valid_cidr': {   'opt_args': [],
                                  'req_args': ['string_network'],
                                  'source_file': 'requests\\requests\\utils.py'},
    'requests.iter_slices': {   'opt_args': [],
                                'req_args': ['slice_length', 'string'],
                                'source_file': 'requests\\requests\\utils.py'},
    'requests.main': {   'opt_args': [],
                         'req_args': [],
                         'source_file': 'requests\\requests\\help.py'},
    'requests.merge_cookies': {   'opt_args': [],
                                  'req_args': ['cookies', 'cookiejar'],
                                  'source_file': 'requests\\requests\\cookies.py'},
    'requests.merge_hooks': {   'opt_args': ['dict_class'],
                                'req_args': ['session_hooks', 'request_hooks'],
                                'source_file': 'requests\\requests\\sessions.py'},
    'requests.merge_setting': {   'opt_args': ['dict_class'],
                                  'req_args': [   'session_setting',
                                                  'request_setting'],
                                  'source_file': 'requests\\requests\\sessions.py'},
    'requests.morsel_to_cookie': {   'opt_args': [],
                                     'req_args': ['morsel'],
                                     'source_file': 'requests\\requests\\cookies.py'},
    'requests.options': {   'opt_args': ['kwargs'],
                            'req_args': ['url'],
                            'source_file': 'requests\\requests\\api.py'},
    'requests.parse_dict_header': {   'opt_args': [],
                                      'req_args': ['value'],
                                      'source_file': 'requests\\requests\\utils.py'},
    'requests.parse_header_links': {   'opt_args': [],
                                       'req_args': ['value'],
                                       'source_file': 'requests\\requests\\utils.py'},
    'requests.parse_list_header': {   'opt_args': [],
                                      'req_args': ['value'],
                                      'source_file': 'requests\\requests\\utils.py'},
    'requests.patch': {   'opt_args': ['data', 'kwargs'],
                          'req_args': ['url'],
                          'source_file': 'requests\\requests\\api.py'},
    'requests.post': {   'opt_args': ['json', 'data', 'kwargs'],
                         'req_args': ['url'],
                         'source_file': 'requests\\requests\\api.py'},
    'requests.prepend_scheme_if_needed': {   'opt_args': [],
                                             'req_args': ['new_scheme', 'url'],
                                             'source_file': 'requests\\requests\\utils.py'},
    'requests.put': {   'opt_args': ['data', 'kwargs'],
                        'req_args': ['url'],
                        'source_file': 'requests\\requests\\api.py'},
    'requests.remove_cookie_by_name': {   'opt_args': ['path', 'domain'],
                                          'req_args': ['name', 'cookiejar'],
                                          'source_file': 'requests\\requests\\cookies.py'},
    'requests.request': {   'opt_args': ['kwargs'],
                            'req_args': ['url', 'method'],
                            'source_file': 'requests\\requests\\api.py'},
    'requests.requote_uri': {   'opt_args': [],
                                'req_args': ['uri'],
                                'source_file': 'requests\\requests\\utils.py'},
    'requests.resolve_proxies': {   'opt_args': ['trust_env'],
                                    'req_args': ['proxies', 'request'],
                                    'source_file': 'requests\\requests\\utils.py'},
    'requests.rewind_body': {   'opt_args': [],
                                'req_args': ['prepared_request'],
                                'source_file': 'requests\\requests\\utils.py'},
    'requests.select_proxy': {   'opt_args': [],
                                 'req_args': ['proxies', 'url'],
                                 'source_file': 'requests\\requests\\utils.py'},
    'requests.session': {   'opt_args': [],
                            'req_args': [],
                            'source_file': 'requests\\requests\\sessions.py'},
    'requests.set_environ': {   'opt_args': [],
                                'req_args': ['value', 'env_name'],
                                'source_file': 'requests\\requests\\utils.py'},
    'requests.should_bypass_proxies': {   'opt_args': [],
                                          'req_args': ['no_proxy', 'url'],
                                          'source_file': 'requests\\requests\\utils.py'},
    'requests.stream_decode_response_unicode': {   'opt_args': [],
                                                   'req_args': [   'r',
                                                                   'iterator'],
                                                   'source_file': 'requests\\requests\\utils.py'},
    'requests.super_len': {   'opt_args': [],
                              'req_args': ['o'],
                              'source_file': 'requests\\requests\\utils.py'},
    'requests.to_key_val_list': {   'opt_args': [],
                                    'req_args': ['value'],
                                    'source_file': 'requests\\requests\\utils.py'},
    'requests.to_native_string': {   'opt_args': ['encoding'],
                                     'req_args': ['string'],
                                     'source_file': 'requests\\requests\\_internal_utils.py'},
    'requests.unicode_is_ascii': {   'opt_args': [],
                                     'req_args': ['u_string'],
                                     'source_file': 'requests\\requests\\_internal_utils.py'},
    'requests.unquote_header_value': {   'opt_args': ['is_filename'],
                                         'req_args': ['value'],
                                         'source_file': 'requests\\requests\\utils.py'},
    'requests.unquote_unreserved': {   'opt_args': [],
                                       'req_args': ['uri'],
                                       'source_file': 'requests\\requests\\utils.py'},
    'requests.urldefragauth': {   'opt_args': [],
                                  'req_args': ['url'],
                                  'source_file': 'requests\\requests\\utils.py'}}
