{   'ACEMentionExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\ACEMentionExtractor.java'},
    'ADMath': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\math\\ADMath.java'},
    'ASBCunkDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ATBArabicDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\ATBArabicDataset.java'},
    'ATBCorrector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\ATBCorrector.java'},
    'ATBCorrectorVisitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\ATBCorrectorVisitor.java'},
    'ATBEscaper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ATBEscaper.java'},
    'ATBTreeUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ATBTreeUtils.java'},
    'AbishekFrenchHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\AbishekFrenchHeadFinder.java'},
    'AbstractBatchOptimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\learning\\AbstractBatchOptimizer.java'},
    'AbstractCachingDiffFloatFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\AbstractCachingDiffFloatFunction.java'},
    'AbstractCachingDiffFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\AbstractCachingDiffFunction.java'},
    'AbstractCollinsHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\AbstractCollinsHeadFinder.java'},
    'AbstractCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\AbstractCounter.java'},
    'AbstractDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\AbstractDataset.java'},
    'AbstractDependencyGrammar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\AbstractDependencyGrammar.java'},
    'AbstractDifferentiableFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\learning\\AbstractDifferentiableFunction.java'},
    'AbstractEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\AbstractEval.java'},
    'AbstractEvaluate': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\AbstractEvaluate.java'},
    'AbstractInputStreamAnnotationCreator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AbstractInputStreamAnnotationCreator.java'},
    'AbstractIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\AbstractIterator.java'},
    'AbstractLinearClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\AbstractLinearClassifierFactory.java'},
    'AbstractListProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\AbstractListProcessor.java'},
    'AbstractPronounResolver': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\AbstractPronounResolver.java'},
    'AbstractSceneGraphParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\AbstractSceneGraphParser.java'},
    'AbstractSequenceClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\AbstractSequenceClassifier.java'},
    'AbstractStochasticCachingDiffFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\AbstractStochasticCachingDiffFunction.java'},
    'AbstractStochasticCachingDiffUpdateFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\AbstractStochasticCachingDiffUpdateFunction.java'},
    'AbstractTextAnnotationCreator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AbstractTextAnnotationCreator.java'},
    'AbstractTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\AbstractTokenizer.java'},
    'AbstractTreeExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\AbstractTreeExtractor.java'},
    'AbstractTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\AbstractTreebankLanguagePack.java'},
    'AbstractTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\AbstractTreebankParserParams.java'},
    'AbstractUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\AbstractUnknownWordModelTrainer.java'},
    'AccuracyStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\AccuracyStats.java'},
    'AceCharSeq': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceCharSeq.java'},
    'AceDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceDocument.java'},
    'AceDomReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceDomReader.java'},
    'AceElement': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceElement.java'},
    'AceEntity': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceEntity.java'},
    'AceEntityMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceEntityMention.java'},
    'AceEvent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceEvent.java'},
    'AceEventMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceEventMention.java'},
    'AceMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceMention.java'},
    'AceMentionArgument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceMentionArgument.java'},
    'AceReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\AceReader.java'},
    'AceRelation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceRelation.java'},
    'AceRelationMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceRelationMention.java'},
    'AceSentenceSegmenter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceSentenceSegmenter.java'},
    'AceToken': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\AceToken.java'},
    'AcronymMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\AcronymMatcher.java'},
    'AdaptedGaussianPriorObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\AdaptedGaussianPriorObjectiveFunction.java'},
    'AddDep': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\AddDep.java'},
    'AddEdge': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\AddEdge.java'},
    'AddMorphoAnnotations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\morph\\AddMorphoAnnotations.java'},
    'AddNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\AddNode.java'},
    'AddTaggerToParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\AddTaggerToParser.java'},
    'AdjoinNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\AdjoinNode.java'},
    'AdjoinToFootNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\AdjoinToFootNode.java'},
    'AdjoinToHeadNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\AdjoinToHeadNode.java'},
    'AffixDictionary': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\AffixDictionary.java'},
    'Alignment': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\Alignment.java'},
    'AmbiguityClass': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\AmbiguityClass.java'},
    'Americanize': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\Americanize.java'},
    'AmericanizeFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\AmericanizeFunction.java'},
    'AnCoraPOSStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\pipeline\\AnCoraPOSStats.java'},
    'AnCoraProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\pipeline\\AnCoraProcessor.java'},
    'AnCoraPronounDisambiguator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\process\\AnCoraPronounDisambiguator.java'},
    'AnnotatedTextReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\AnnotatedTextReader.java'},
    'Annotation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\Annotation.java'},
    'AnnotationIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AnnotationIterator.java'},
    'AnnotationLookup': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\AnnotationLookup.java'},
    'AnnotationOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AnnotationOutputter.java'},
    'AnnotationPipeline': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AnnotationPipeline.java'},
    'AnnotationSerializer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AnnotationSerializer.java'},
    'AnnotationUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\AnnotationUtils.java'},
    'AnnotatorImplementations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AnnotatorImplementations.java'},
    'AnnotatorPool': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\AnnotatorPool.java'},
    'ApplyDepPatterns': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\dep\\ApplyDepPatterns.java'},
    'ApplyPatterns': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\ApplyPatterns.java'},
    'ApplyPatternsMulti': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\ApplyPatternsMulti.java'},
    'ApproxMatch': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\ApproxMatch.java'},
    'ArabicDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\ArabicDocument.java'},
    'ArabicDocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\ArabicDocumentReaderAndWriter.java'},
    'ArabicLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\ArabicLexer.java'},
    'ArabicMorphoFeatureSpecification': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\ArabicMorphoFeatureSpecification.java'},
    'ArabicSegmenter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\ArabicSegmenter.java'},
    'ArabicSegmenterAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ArabicSegmenterAnnotator.java'},
    'ArabicSegmenterFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\ArabicSegmenterFeatureFactory.java'},
    'ArabicTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\ArabicTokenizer.java'},
    'ArabicTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ArabicTreeNormalizer.java'},
    'ArabicTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ArabicTreeReaderFactory.java'},
    'ArabicTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ArabicTreebankLanguagePack.java'},
    'ArabicTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ArabicTreebankParserParams.java'},
    'ArabicTreebankTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ArabicTreebankTokenizer.java'},
    'ArabicUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ArabicUnknownWordModel.java'},
    'ArabicUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ArabicUnknownWordModelTrainer.java'},
    'ArabicUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\arabic\\ArabicUtils.java'},
    'ArabicVerbStemBank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\ArabicVerbStemBank.java'},
    'ArabicWordLists': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\ArabicWordLists.java'},
    'ArcStandard': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\ArcStandard.java'},
    'ArgUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\common\\ArgUtils.java'},
    'ArrayCoreMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ArrayCoreMap.java'},
    'ArrayHeap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ArrayHeap.java'},
    'ArrayMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ArrayMap.java'},
    'ArrayMath': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\math\\ArrayMath.java'},
    'ArraySet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ArraySet.java'},
    'ArrayStringFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ArrayStringFilter.java'},
    'ArrayUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ArrayUtils.java'},
    'AtomicDouble': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\concurrent\\AtomicDouble.java'},
    'AuxiliaryTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\AuxiliaryTree.java'},
    'AverageDVModels': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\AverageDVModels.java'},
    'BZip2PipedOutputStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\BZip2PipedOutputStream.java'},
    'BacktrackingAdaGradOptimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\learning\\BacktrackingAdaGradOptimizer.java'},
    'BammanCorefReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\BammanCorefReader.java'},
    'BaseLexicon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BaseLexicon.java'},
    'BaseModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\BaseModel.java'},
    'BaseUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BaseUnknownWordModel.java'},
    'BaseUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BaseUnknownWordModelTrainer.java'},
    'BaselineTopSpeakerSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\MSSieves\\BaselineTopSpeakerSieve.java'},
    'BasicCategoryTagProjection': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BasicCategoryTagProjection.java'},
    'BasicCategoryTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\BasicCategoryTreeTransformer.java'},
    'BasicDatum': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\BasicDatum.java'},
    'BasicDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\BasicDocument.java'},
    'BasicEntityExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\BasicEntityExtractor.java'},
    'BasicFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\BasicFeatureFactory.java'},
    'BasicPipelineExample': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\examples\\BasicPipelineExample.java'},
    'BasicRelationExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\BasicRelationExtractor.java'},
    'BasicRelationFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\BasicRelationFeatureFactory.java'},
    'BasicSequenceMatchResult': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\BasicSequenceMatchResult.java'},
    'Beam': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Beam.java'},
    'BeamBestSequenceFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\BeamBestSequenceFinder.java'},
    'BestOfTopKEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\BestOfTopKEval.java'},
    'BiLexPCFGParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BiLexPCFGParser.java'},
    'BiasedLogConditionalObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\BiasedLogConditionalObjectiveFunction.java'},
    'BiasedLogisticObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\BiasedLogisticObjectiveFunction.java'},
    'BigWindowArabicSegmenterFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\BigWindowArabicSegmenterFeatureFactory.java'},
    'BinarizerAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\BinarizerAnnotator.java'},
    'BinaryGrammar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BinaryGrammar.java'},
    'BinaryGrammarExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BinaryGrammarExtractor.java'},
    'BinaryHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BinaryHeadFinder.java'},
    'BinaryHeapPriorityQueue': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\BinaryHeapPriorityQueue.java'},
    'BinaryRule': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BinaryRule.java'},
    'BinaryTransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\BinaryTransition.java'},
    'BoWExample': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\BoWExample.java'},
    'BoWSceneGraphParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\BoWSceneGraphParser.java'},
    'BobChrisTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\BobChrisTreeNormalizer.java'},
    'BooleanLogRecordHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\BooleanLogRecordHandler.java'},
    'BoundaryRemover': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\BoundaryRemover.java'},
    'BoundedCostOrderedMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\BoundedCostOrderedMap.java'},
    'BoundedPriorityQueue': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\BoundedPriorityQueue.java'},
    'Buckwalter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\Buckwalter.java'},
    'BuildBinarizedDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\BuildBinarizedDataset.java'},
    'BuildMultiWordRules': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\stattok\\BuildMultiWordRules.java'},
    'ByteArrayUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\ByteArrayUtils.java'},
    'CEDict': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\CEDict.java'},
    'CGMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\CGMinimizer.java'},
    'CGRunner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\CGRunner.java'},
    'CHTBLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\CHTBLexer.java'},
    'CHTBTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\CHTBTokenizer.java'},
    'CMMClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\ner\\CMMClassifier.java'},
    'CNFTransformers': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\CNFTransformers.java'},
    'CORSFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\demo\\CORSFilter.java'},
    'CRFBiasedClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFBiasedClassifier.java'},
    'CRFClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFClassifier.java'},
    'CRFClassifierEvaluator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFClassifierEvaluator.java'},
    'CRFClassifierNonlinear': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFClassifierNonlinear.java'},
    'CRFCliqueTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFCliqueTree.java'},
    'CRFDatum': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFDatum.java'},
    'CRFFeatureExporter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFFeatureExporter.java'},
    'CRFLabel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFLabel.java'},
    'CRFLogConditionalObjectiveFloatFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFLogConditionalObjectiveFloatFunction.java'},
    'CRFLogConditionalObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFLogConditionalObjectiveFunction.java'},
    'CRFLogConditionalObjectiveFunctionForLOP': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFLogConditionalObjectiveFunctionForLOP.java'},
    'CRFLogConditionalObjectiveFunctionNoisyLabel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFLogConditionalObjectiveFunctionNoisyLabel.java'},
    'CRFLogConditionalObjectiveFunctionWithDropout': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFLogConditionalObjectiveFunctionWithDropout.java'},
    'CRFNonLinearLogConditionalObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFNonLinearLogConditionalObjectiveFunction.java'},
    'CRFNonLinearSecondOrderLogConditionalObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\CRFNonLinearSecondOrderLogConditionalObjectiveFunction.java'},
    'CTBErrorCorrectingTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\CTBErrorCorrectingTreeNormalizer.java'},
    'CTBTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\CTBTreeReaderFactory.java'},
    'CTBunkDictDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'CWordBooleanExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'CacheMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CacheMap.java'},
    'CacheParseHypotheses': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\CacheParseHypotheses.java'},
    'CallbackFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CallbackFunction.java'},
    'CandidatePhrase': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\CandidatePhrase.java'},
    'CaselessCompanyNameDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'CategoricalFeatureExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\CategoricalFeatureExtractor.java'},
    'CategoryWordTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\CategoryWordTag.java'},
    'CategoryWordTagFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\CategoryWordTagFactory.java'},
    'ChapterAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\ChapterAnnotator.java'},
    'CharacterLevelTagExtender': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\CharacterLevelTagExtender.java'},
    'Characters': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Characters.java'},
    'CharniakParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\charniak\\CharniakParser.java'},
    'CharniakParserAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CharniakParserAnnotator.java'},
    'CharniakScoredParsesReaderWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\charniak\\CharniakScoredParsesReaderWriter.java'},
    'ChineseCharacterBasedLexicon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseCharacterBasedLexicon.java'},
    'ChineseCharacterBasedLexiconTraining': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseCharacterBasedLexiconTraining.java'},
    'ChineseCollinizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseCollinizer.java'},
    'ChineseDictionary': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\ChineseDictionary.java'},
    'ChineseDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\ChineseDocument.java'},
    'ChineseDocumentToSentenceProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\ChineseDocumentToSentenceProcessor.java'},
    'ChineseEnglishWordMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseEnglishWordMap.java'},
    'ChineseEscaper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseEscaper.java'},
    'ChineseGrammaticalRelations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseGrammaticalRelations.java'},
    'ChineseGrammaticalStructure': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseGrammaticalStructure.java'},
    'ChineseGrammaticalStructureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseGrammaticalStructureFactory.java'},
    'ChineseHcorefDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\demo\\ChineseHcorefDemo.java'},
    'ChineseLexicon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseLexicon.java'},
    'ChineseLexiconAndWordSegmenter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseLexiconAndWordSegmenter.java'},
    'ChineseMarkovWordSegmenter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseMarkovWordSegmenter.java'},
    'ChineseMaxentLexicon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseMaxentLexicon.java'},
    'ChineseMorphFeatureSets': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\ChineseMorphFeatureSets.java'},
    'ChineseNumberSequenceClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\regexp\\ChineseNumberSequenceClassifier.java'},
    'ChineseQuantifiableEntityNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\ChineseQuantifiableEntityNormalizer.java'},
    'ChineseSegmenterAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ChineseSegmenterAnnotator.java'},
    'ChineseSegmenterFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\ChineseSegmenterFeatureFactory.java'},
    'ChineseSimWordAvgDepGrammar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseSimWordAvgDepGrammar.java'},
    'ChineseStringUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\ChineseStringUtils.java'},
    'ChineseTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseTreebankLanguagePack.java'},
    'ChineseTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseTreebankParserParams.java'},
    'ChineseUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseUnknownWordModel.java'},
    'ChineseUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseUnknownWordModelTrainer.java'},
    'ChineseUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\ChineseUtils.java'},
    'ChineseWordFeatureExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ChineseWordFeatureExtractor.java'},
    'ChunkAnnotationUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ChunkAnnotationUtils.java'},
    'ClassicCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\ClassicCounter.java'},
    'Classifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\Classifier.java'},
    'ClassifierCombiner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\ClassifierCombiner.java'},
    'ClassifierDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\demo\\ClassifierDemo.java'},
    'ClassifierExample': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\ClassifierExample.java'},
    'ClauseSplitterSearchProblem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\ClauseSplitterSearchProblem.java'},
    'CleanXmlAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CleanXmlAnnotator.java'},
    'Clique': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\Clique.java'},
    'CliqueTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\inference\\CliqueTree.java'},
    'ClosestMentionSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\ClosestMentionSieve.java'},
    'Clusterer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\Clusterer.java'},
    'ClustererDataLoader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\ClustererDataLoader.java'},
    'ClusteringCorefAlgorithm': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\ClusteringCorefAlgorithm.java'},
    'CmdEvaluator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\CmdEvaluator.java'},
    'CoNLL2011DocumentReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\CoNLL2011DocumentReader.java'},
    'CoNLLBenchmark': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\benchmarks\\CoNLLBenchmark.java'},
    'CoNLLDocumentReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\docreader\\CoNLLDocumentReader.java'},
    'CoNLLDocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\CoNLLDocumentReaderAndWriter.java'},
    'CoNLLFeaturizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\benchmarks\\CoNLLFeaturizer.java'},
    'CoNLLMentionExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\CoNLLMentionExtractor.java'},
    'CoNLLOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoNLLOutputter.java'},
    'CoNLLUDocumentReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\CoNLLUDocumentReader.java'},
    'CoNLLUDocumentWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\CoNLLUDocumentWriter.java'},
    'CoNLLUOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoNLLUOutputter.java'},
    'CoNLLUReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoNLLUReader.java'},
    'CoNLLUTagUpdater': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\CoNLLUTagUpdater.java'},
    'CoNLLUUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\CoNLLUUtils.java'},
    'CodepointCoreLabelProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\CodepointCoreLabelProcessor.java'},
    'CoindexNodes': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\CoindexNodes.java'},
    'CoindexationGenerator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\CoindexationGenerator.java'},
    'CollapseSubtree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\CollapseSubtree.java'},
    'CollapseUnaryTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\CollapseUnaryTransformer.java'},
    'CollectionFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CollectionFactory.java'},
    'CollectionUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CollectionUtils.java'},
    'CollectionValuedMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CollectionValuedMap.java'},
    'CollinsDepEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\CollinsDepEval.java'},
    'CollinsDependency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CollinsDependency.java'},
    'CollinsHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CollinsHeadFinder.java'},
    'CollinsPuncTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\CollinsPuncTransformer.java'},
    'CollinsRelation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CollinsRelation.java'},
    'CollocationFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CollocationFinder.java'},
    'ColumnDataClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\ColumnDataClassifier.java'},
    'ColumnDataClassifierAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ColumnDataClassifierAnnotator.java'},
    'ColumnDocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\ColumnDocumentReaderAndWriter.java'},
    'ColumnTabDocumentReaderWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\ColumnTabDocumentReaderWriter.java'},
    'CombinationFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\CombinationFeatureFactory.java'},
    'CombineDVModels': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\CombineDVModels.java'},
    'CombinedDVModelReranker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\CombinedDVModelReranker.java'},
    'CommandLineTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CommandLineTokenizer.java'},
    'CompanyNameDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'Comparators': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Comparators.java'},
    'ComplexNodePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\ComplexNodePattern.java'},
    'CompositeTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CompositeTreeTransformer.java'},
    'CompositeTreebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CompositeTreebank.java'},
    'CompoundUnaryTransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\CompoundUnaryTransition.java'},
    'Compressor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\Compressor.java'},
    'ConcatVector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\ConcatVector.java'},
    'ConcatVectorBenchmark': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\benchmarks\\ConcatVectorBenchmark.java'},
    'ConcatVectorNamespace': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\ConcatVectorNamespace.java'},
    'ConcatVectorProto': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\proto\\ConcatVectorProto.java'},
    'ConcatVectorTable': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\ConcatVectorTable.java'},
    'ConcatVectorTableProto': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\proto\\ConcatVectorTableProto.java'},
    'ConcatenationIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ConcatenationIterator.java'},
    'ConcurrentHashCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\concurrent\\ConcurrentHashCounter.java'},
    'ConcurrentHashIndex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\concurrent\\ConcurrentHashIndex.java'},
    'Config': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\Config.java'},
    'ConfigParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\ConfigParser.java'},
    'Configuration': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\Configuration.java'},
    'ConfusionMatrix': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ConfusionMatrix.java'},
    'ConfusionMatrixTSV': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\scripts\\ConfusionMatrixTSV.java'},
    'ConnectedComponents': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\graph\\ConnectedComponents.java'},
    'Constants': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\Constants.java'},
    'ConstantsAndVariables': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ConstantsAndVariables.java'},
    'Constituent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Constituent.java'},
    'ConversationalSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\ConversationalSieve.java'},
    'ConvertByteArray': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ConvertByteArray.java'},
    'ConvertGenderFile': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\util\\ConvertGenderFile.java'},
    'ConvertMatlabModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\ConvertMatlabModel.java'},
    'ConvertModels': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\ConvertModels.java'},
    'ConvertTreesToTags': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\util\\ConvertTreesToTags.java'},
    'CoolingSchedule': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\CoolingSchedule.java'},
    'CoordinationPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\CoordinationPattern.java'},
    'CoordinationTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\CoordinationTransformer.java'},
    'CopySerializedObject': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\CopySerializedObject.java'},
    'CoreDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreDocument.java'},
    'CoreEntityMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreEntityMention.java'},
    'CoreLabel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\CoreLabel.java'},
    'CoreLabelProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\CoreLabelProcessor.java'},
    'CoreLabelTokenFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\CoreLabelTokenFactory.java'},
    'CoreMapAggregator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreMapAggregator.java'},
    'CoreMapAttributeAggregator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreMapAttributeAggregator.java'},
    'CoreMapExpressionExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\CoreMapExpressionExtractor.java'},
    'CoreMapExpressionNodePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\CoreMapExpressionNodePattern.java'},
    'CoreMapNodePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\CoreMapNodePattern.java'},
    'CoreMapNodePatternTrigger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\CoreMapNodePatternTrigger.java'},
    'CoreMapSequenceMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\CoreMapSequenceMatcher.java'},
    'CoreMaps': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\CoreMaps.java'},
    'CoreNLPDocumentReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\docreader\\CoreNLPDocumentReader.java'},
    'CoreNLPProtos': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreNLPProtos.java'},
    'CoreNLPServlet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\webapp\\CoreNLPServlet.java'},
    'CoreQuote': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreQuote.java'},
    'CoreSentence': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CoreSentence.java'},
    'CoreUtilities': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\CoreUtilities.java'},
    'CorefAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CorefAnnotator.java'},
    'CorefChain': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\data\\CorefChain.java'},
    'CorefCluster': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\data\\CorefCluster.java'},
    'CorefMentionAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CorefMentionAnnotator.java'},
    'CorefMentionFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\md\\CorefMentionFinder.java'},
    'CorefPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\CorefPrinter.java'},
    'CorefProperties': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\CorefProperties.java'},
    'CorefRules': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\CorefRules.java'},
    'CorefScorer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\CorefScorer.java'},
    'CorefSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\CorefSystem.java'},
    'CorefUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\CorefUtils.java'},
    'CoreferenceSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\CoreferenceSystem.java'},
    'CorpusChar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\CorpusChar.java'},
    'CorpusDictionary': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\CorpusDictionary.java'},
    'CountClosedTags': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\util\\CountClosedTags.java'},
    'CountTrees': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\CountTrees.java'},
    'CountWrapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\CountWrapper.java'},
    'Counters': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\Counters.java'},
    'CreateClauseDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\CreateClauseDataset.java'},
    'CreatePatterns': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\CreatePatterns.java'},
    'CreateSubtreeNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\CreateSubtreeNode.java'},
    'CreateTransitionSequence': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\CreateTransitionSequence.java'},
    'CrossValidator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\CrossValidator.java'},
    'CtbPreDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'CtbSufDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'CustomAnnotationSerializer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\CustomAnnotationSerializer.java'},
    'DFSA': {'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\DFSA.java'},
    'DFSAMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\DFSAMinimizer.java'},
    'DFSAState': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\DFSAState.java'},
    'DFSATransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\DFSATransition.java'},
    'DVModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\DVModel.java'},
    'DVModelReranker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\DVModelReranker.java'},
    'DVParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\DVParser.java'},
    'DVParserCostAndGradient': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\DVParserCostAndGradient.java'},
    'Data': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\Data.java'},
    'DataFilePaths': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\DataFilePaths.java'},
    'DataGeneric': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\DataGeneric.java'},
    'DataInstance': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\DataInstance.java'},
    'DataInstanceDep': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\dep\\DataInstanceDep.java'},
    'DataInstanceSurface': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\DataInstanceSurface.java'},
    'DataWordTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\DataWordTag.java'},
    'Dataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\Dataset.java'},
    'DatasetBuilder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\DatasetBuilder.java'},
    'DateTemplate': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\pascal\\DateTemplate.java'},
    'DateTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DateTreeTransformer.java'},
    'DcorefPronounResolver': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\DcorefPronounResolver.java'},
    'DcorefSieveOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\sieve\\DcorefSieveOptions.java'},
    'Debinarizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\Debinarizer.java'},
    'DecimatedArabicDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\DecimatedArabicDataset.java'},
    'DecisionTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\rf\\DecisionTree.java'},
    'DecisionTreeNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\rf\\DecisionTreeNode.java'},
    'DeepTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DeepTree.java'},
    'DefaultLexicalMapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\DefaultLexicalMapper.java'},
    'DefaultMapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\DefaultMapper.java'},
    'DefaultPaths': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\DefaultPaths.java'},
    'DeleteGraphFromNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\DeleteGraphFromNode.java'},
    'DeleteNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\DeleteNode.java'},
    'DelimitRegExIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\DelimitRegExIterator.java'},
    'DeltaCollectionValuedMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\DeltaCollectionValuedMap.java'},
    'DeltaIndex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\DeltaIndex.java'},
    'DeltaMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\DeltaMap.java'},
    'DepPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\dep\\DepPattern.java'},
    'DepPatternFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\dep\\DepPatternFactory.java'},
    'Dependencies': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Dependencies.java'},
    'DependencyAnalyzer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\misc\\DependencyAnalyzer.java'},
    'DependencyCorefMentionFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\md\\DependencyCorefMentionFinder.java'},
    'DependencyParseAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\DependencyParseAnnotator.java'},
    'DependencyParseSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\DependencyParseSieve.java'},
    'DependencyParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\DependencyParser.java'},
    'DependencyParserCache': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\DependencyParserCache.java'},
    'DependencyParserCoreNLPDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\demo\\DependencyParserCoreNLPDemo.java'},
    'DependencyParserDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\demo\\DependencyParserDemo.java'},
    'DependencyScoring': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DependencyScoring.java'},
    'DependencyTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\DependencyTree.java'},
    'DependencyTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DependencyTreeTransformer.java'},
    'DescriptionPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\DescriptionPattern.java'},
    'DeterministicCorefAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\DeterministicCorefAnnotator.java'},
    'DeterministicCorefSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\sievepasses\\DeterministicCorefSieve.java'},
    'DeterministicSpeakerSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\MSSieves\\DeterministicSpeakerSieve.java'},
    'Dictionaries': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\Dictionaries.java'},
    'Dictionary': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\Dictionary.java'},
    'DirectedMultiGraph': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\graph\\DirectedMultiGraph.java'},
    'Dirichlet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\Dirichlet.java'},
    'DirichletProcess': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\DirichletProcess.java'},
    'DisabledPreferencesFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\DisabledPreferencesFactory.java'},
    'DiskTreebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DiskTreebank.java'},
    'DisplayMatchesPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\DisplayMatchesPanel.java'},
    'DistSimClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\DistSimClassifier.java'},
    'Distribution': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\Distribution.java'},
    'DistributionPackage': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\DistributionPackage.java'},
    'Distributions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\Distributions.java'},
    'Distsim': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\Distsim.java'},
    'DistsimFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\DistsimFeatureFactory.java'},
    'DocDateAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\DocDateAnnotator.java'},
    'Document': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\Document.java'},
    'DocumentMaker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\data\\DocumentMaker.java'},
    'DocumentPreprocessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\DocumentPreprocessor.java'},
    'DocumentReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\DocumentReader.java'},
    'DomReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\common\\DomReader.java'},
    'DoubleAD': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\math\\DoubleAD.java'},
    'DumpMatrices': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\DumpMatrices.java'},
    'DuplicateTreeStringFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\DuplicateTreeStringFilter.java'},
    'DybroFrenchHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\DybroFrenchHeadFinder.java'},
    'EPEOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\EPEOutputter.java'},
    'Edge': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\Edge.java'},
    'EditDistance': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\EditDistance.java'},
    'EditDistanceDamerauLevenshteinLike': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\EditDistanceDamerauLevenshteinLike.java'},
    'Embedding': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\Embedding.java'},
    'EmbeddingExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\EmbeddingExtractor.java'},
    'EmbeddingFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EmbeddingFeatureFactory.java'},
    'EmpiricalNERPrior': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EmpiricalNERPrior.java'},
    'EmpiricalNERPriorBIO': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EmpiricalNERPriorBIO.java'},
    'EmpiricalNERPriorBIOFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EmpiricalNERPriorBIOFactory.java'},
    'EmpiricalNERPriorFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EmpiricalNERPriorFactory.java'},
    'EnglishGrammaticalRelations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\EnglishGrammaticalRelations.java'},
    'EnglishGrammaticalStructure': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\EnglishGrammaticalStructure.java'},
    'EnglishGrammaticalStructureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\EnglishGrammaticalStructureFactory.java'},
    'EnglishPTBTreebankCorrector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\EnglishPTBTreebankCorrector.java'},
    'EnglishTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\EnglishTreebankParserParams.java'},
    'EnglishUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\EnglishUnknownWordModel.java'},
    'EnglishUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\EnglishUnknownWordModelTrainer.java'},
    'Entity': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\Entity.java'},
    'EntityBIO': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EntityCachingAbstractSequencePriorBIO.java'},
    'EntityCachingAbstractSequencePrior': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EntityCachingAbstractSequencePrior.java'},
    'EntityCachingAbstractSequencePriorBIO': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\EntityCachingAbstractSequencePriorBIO.java'},
    'EntityClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\EntityClassifier.java'},
    'EntityExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\EntityExtractor.java'},
    'EntityExtractorResultsPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\EntityExtractorResultsPrinter.java'},
    'EntityMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\EntityMention.java'},
    'EntityMentionFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\EntityMentionFactory.java'},
    'EntityMentionsAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\EntityMentionsAnnotator.java'},
    'Env': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\Env.java'},
    'EnvLookup': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\EnvLookup.java'},
    'EquivalenceClassEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\EquivalenceClassEval.java'},
    'ErasureUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ErasureUtils.java'},
    'EvalUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\EvalUtils.java'},
    'Evalb': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\Evalb.java'},
    'EvalbByCat': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\EvalbByCat.java'},
    'EvalbFormatWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\EvalbFormatWriter.java'},
    'Evaluate': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\Evaluate.java'},
    'EvaluateExternalParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\EvaluateExternalParser.java'},
    'EvaluateTreebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\EvaluateTreebank.java'},
    'EvaluationMetric': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\EvaluationMetric.java'},
    'Event': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\Event.java'},
    'EventMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\EventMention.java'},
    'ExactAutomatonMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\ExactAutomatonMinimizer.java'},
    'ExactBestSequenceFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\ExactBestSequenceFinder.java'},
    'ExactMatchCost': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\ExactMatchCost.java'},
    'Example': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\Example.java'},
    'ExciseNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\ExciseNode.java'},
    'ExhaustiveDependencyParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ExhaustiveDependencyParser.java'},
    'ExhaustivePCFGParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ExhaustivePCFGParser.java'},
    'Experiments': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\Experiments.java'},
    'Expressions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\types\\Expressions.java'},
    'ExtensionFileFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\ExtensionFileFilter.java'},
    'ExternalEvaluate': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\ExternalEvaluate.java'},
    'ExternalParserQuery': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\ExternalParserQuery.java'},
    'ExtractPhraseFromPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\dep\\ExtractPhraseFromPattern.java'},
    'ExtractQuotesClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\ExtractQuotesClassifier.java'},
    'ExtractQuotesUtil': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\ExtractQuotesUtil.java'},
    'ExtractedPhrase': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\dep\\ExtractedPhrase.java'},
    'ExtractionDataSet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\ExtractionDataSet.java'},
    'ExtractionObject': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\ExtractionObject.java'},
    'ExtractionSentence': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\ExtractionSentence.java'},
    'Extractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\Extractor.java'},
    'ExtractorAllCap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorAllCapitalized': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorCNumber': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorCapC': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorCapDistLC': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorCapLCSeen': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorDash': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorDistsim': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorDistsim.java'},
    'ExtractorDistsimConjunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorDistsimConjunction.java'},
    'ExtractorLetterDashDigit': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorLetterDigitDash': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorMerger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\ExtractorMerger.java'},
    'ExtractorMidSentenceCap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorMidSentenceCapC': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorNonAlphanumeric': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorNumeric': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorSpanishAuxiliaryTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFrames.java'},
    'ExtractorSpanishSemiauxiliaryTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFrames.java'},
    'ExtractorStartSentenceCap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorSymbols': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorUCase': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorUpperDigitDash': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorVerbalVBNZero': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorVerbalVBNZero.java'},
    'ExtractorWordPref': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'ExtractorWordShapeClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFrames.java'},
    'ExtractorWordShapeConjunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFrames.java'},
    'ExtractorWordSuff': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'Extractors': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\Extractors.java'},
    'ExtractorsConjunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'FTBCorrector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\pipeline\\FTBCorrector.java'},
    'FTBCorrectorVisitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\pipeline\\FTBCorrectorVisitor.java'},
    'FTBDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\pipeline\\FTBDataset.java'},
    'FactorTable': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\FactorTable.java'},
    'FactoredLexicon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FactoredLexicon.java'},
    'FactoredLexiconEvent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FactoredLexiconEvent.java'},
    'FactoredParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FactoredParser.java'},
    'FactoredSequenceListener': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\FactoredSequenceListener.java'},
    'FactoredSequenceModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\FactoredSequenceModel.java'},
    'FastDisjointSet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FastDisjointSet.java'},
    'FastExactAutomatonMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\FastExactAutomatonMinimizer.java'},
    'FastFactoredParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FastFactoredParser.java'},
    'FastNeuralCorefAlgorithm': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\fastneural\\FastNeuralCorefAlgorithm.java'},
    'FastNeuralCorefDataExporter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\fastneural\\FastNeuralCorefDataExporter.java'},
    'FastNeuralCorefModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\fastneural\\FastNeuralCorefModel.java'},
    'FastNeuralCorefProperties': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\fastneural\\FastNeuralCorefProperties.java'},
    'Feature': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\Feature.java'},
    'FeatureExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\FeatureExtractor.java'},
    'FeatureExtractorRunner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\FeatureExtractorRunner.java'},
    'FeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\FeatureFactory.java'},
    'FeatureKey': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\FeatureKey.java'},
    'Features': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\Features.java'},
    'FetchNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\FetchNode.java'},
    'FileFilters': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\FileFilters.java'},
    'FilePanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\FilePanel.java'},
    'FilePathProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FilePathProcessor.java'},
    'FileSequentialCollection': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\FileSequentialCollection.java'},
    'FileSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\FileSystem.java'},
    'FileTreeModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\FileTreeModel.java'},
    'FileTreeNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\FileTreeNode.java'},
    'FilterConfusingRules': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\FilterConfusingRules.java'},
    'FilterHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\FilterHandler.java'},
    'FilteredEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\FilteredEval.java'},
    'FilteredIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FilteredIterator.java'},
    'FilteringTreeReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\FilteringTreeReader.java'},
    'FilteringTreebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\FilteringTreebank.java'},
    'Filters': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Filters.java'},
    'FinalizeTransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\FinalizeTransition.java'},
    'FindNearestNeighbors': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\FindNearestNeighbors.java'},
    'FindTreebankTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\FindTreebankTree.java'},
    'FiveDimensionalMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FiveDimensionalMap.java'},
    'FixLocation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\util\\FixLocation.java'},
    'FixedPrioritiesPriorityQueue': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FixedPrioritiesPriorityQueue.java'},
    'FloatFactorTable': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\FloatFactorTable.java'},
    'FontDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\swing\\FontDetector.java'},
    'ForwardEntailer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\ForwardEntailer.java'},
    'ForwardEntailerSearchProblem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\ForwardEntailerSearchProblem.java'},
    'FourDimensionalMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FourDimensionalMap.java'},
    'FragDiscardingPennTreeReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\FragDiscardingPennTreeReader.java'},
    'FragmentTreeFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\FragmentTreeFilter.java'},
    'FrenchDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\FrenchDocument.java'},
    'FrenchHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\FrenchHeadFinder.java'},
    'FrenchLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\process\\FrenchLexer.java'},
    'FrenchMorphoFeatureSpecification': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\FrenchMorphoFeatureSpecification.java'},
    'FrenchTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\process\\FrenchTokenizer.java'},
    'FrenchTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\FrenchTreeNormalizer.java'},
    'FrenchTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\FrenchTreeReaderFactory.java'},
    'FrenchTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\FrenchTreebankLanguagePack.java'},
    'FrenchTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FrenchTreebankParserParams.java'},
    'FrenchTreebankTokenReport': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\scripts\\FrenchTreebankTokenReport.java'},
    'FrenchTreebankUDUpdater': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\scripts\\FrenchTreebankUDUpdater.java'},
    'FrenchUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FrenchUnknownWordModel.java'},
    'FrenchUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\FrenchUnknownWordModelTrainer.java'},
    'FrenchUnknownWordSignatures': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\FrenchUnknownWordSignatures.java'},
    'FrenchXMLTreeReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\FrenchXMLTreeReader.java'},
    'FrenchXMLTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\french\\FrenchXMLTreeReaderFactory.java'},
    'FromFileCorefAlgorithm': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\misc\\FromFileCorefAlgorithm.java'},
    'Functions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Functions.java'},
    'FuzzyInterval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\FuzzyInterval.java'},
    'GUTimeAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\GUTimeAnnotator.java'},
    'Gale2007ChineseSegmenterFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\Gale2007ChineseSegmenterFeatureFactory.java'},
    'GaleP4LexMapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\GaleP4LexMapper.java'},
    'GamePlayerBenchmark': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\benchmarks\\GamePlayerBenchmark.java'},
    'Gamma': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\Gamma.java'},
    'GenderAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\GenderAnnotator.java'},
    'GeneralDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\GeneralDataset.java'},
    'GeneralizedCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\GeneralizedCounter.java'},
    'GeneralizedExpectationObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\GeneralizedExpectationObjectiveFunction.java'},
    'GenerateAlignmentData': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\GenerateAlignmentData.java'},
    'GenerateTrees': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\GenerateTrees.java'},
    'GenericAnnotationSerializer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\GenericAnnotationSerializer.java'},
    'GenericDataSetReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\GenericDataSetReader.java'},
    'GenericTimeExpressionPatterns': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\GenericTimeExpressionPatterns.java'},
    'GenericTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\GenericTreebankParserParams.java'},
    'GenericWebServiceAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\GenericWebServiceAnnotator.java'},
    'Generics': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Generics.java'},
    'GermanDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\GermanDocument.java'},
    'GermanTokenizerPostProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\german\\process\\GermanTokenizerPostProcessor.java'},
    'GermanTreebankTokenReport': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\german\\scripts\\GermanTreebankTokenReport.java'},
    'GermanTreebankUDUpdater': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\german\\scripts\\GermanTreebankUDUpdater.java'},
    'GermanUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\GermanUnknownWordModel.java'},
    'GetPatternsFromDataMultiClass': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\GetPatternsFromDataMultiClass.java'},
    'GoldenSectionLineSearch': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\GoldenSectionLineSearch.java'},
    'GoogleNGramsSQLBacked': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\GoogleNGramsSQLBacked.java'},
    'GrammarCompactor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\GrammarCompactor.java'},
    'GrammarCoverageChecker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\GrammarCoverageChecker.java'},
    'GrammaticalFunctionTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\GrammaticalFunctionTreeNormalizer.java'},
    'GrammaticalRelation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\GrammaticalRelation.java'},
    'GrammaticalStructure': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\GrammaticalStructure.java'},
    'GrammaticalStructureConversionUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\GrammaticalStructureConversionUtils.java'},
    'GraphLessGrammaticalStructureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DependencyScoring.java'},
    'GraphRelation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\GraphRelation.java'},
    'GraphicalModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\GraphicalModel.java'},
    'GraphicalModelProto': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\proto\\GraphicalModelProto.java'},
    'GroundTruthConverter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\GroundTruthConverter.java'},
    'HTKLatticeReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\HTKLatticeReader.java'},
    'HashIndex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\HashIndex.java'},
    'HashableCoreMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\HashableCoreMap.java'},
    'HebrewTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\hebrew\\HebrewTreeNormalizer.java'},
    'HebrewTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\hebrew\\HebrewTreeReaderFactory.java'},
    'HebrewTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\hebrew\\HebrewTreebankLanguagePack.java'},
    'HebrewTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\HebrewTreebankParserParams.java'},
    'HeidelTimeAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\HeidelTimeAnnotator.java'},
    'HeidelTimeKBPAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\HeidelTimeKBPAnnotator.java'},
    'HighlightUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\HighlightUtils.java'},
    'History': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\History.java'},
    'HoldTreeNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\HoldTreeNode.java'},
    'Hook': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\Hook.java'},
    'HookChart': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\HookChart.java'},
    'HungarianTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\hungarian\\HungarianTreebankLanguagePack.java'},
    'HungarianTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\HungarianTreebankParserParams.java'},
    'HybridCorefAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\HybridCorefAnnotator.java'},
    'HybridCorefMentionFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\md\\HybridCorefMentionFinder.java'},
    'HybridCorefPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\HybridCorefPrinter.java'},
    'HybridCorefProperties': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\HybridCorefProperties.java'},
    'HybridCorefSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\HybridCorefSystem.java'},
    'HybridMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\HybridMinimizer.java'},
    'IBMArabicEscaper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\IBMArabicEscaper.java'},
    'IBMMTArabicDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\IBMMTArabicDataset.java'},
    'IOBUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\IOBUtils.java'},
    'IOUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\IOUtils.java'},
    'ISODateInstance': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\pascal\\ISODateInstance.java'},
    'IdentityFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\IdentityFunction.java'},
    'IdentityHashSet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IdentityHashSet.java'},
    'IdleTransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\IdleTransition.java'},
    'IfExistsNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\IfExistsNode.java'},
    'IndexedWord': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\IndexedWord.java'},
    'InefficientSGDMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\InefficientSGDMinimizer.java'},
    'InfoTemplate': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\pascal\\InfoTemplate.java'},
    'InlineXMLOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\InlineXMLOutputter.java'},
    'InputPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\InputPanel.java'},
    'InsertNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\InsertNode.java'},
    'IntArray': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntArray.java'},
    'IntCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\IntCounter.java'},
    'IntDependency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\IntDependency.java'},
    'IntPair': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntPair.java'},
    'IntQuadruple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntQuadruple.java'},
    'IntTaggedWord': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\IntTaggedWord.java'},
    'IntTriple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntTriple.java'},
    'IntTuple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntTuple.java'},
    'IntUni': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntUni.java'},
    'Interner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Interner.java'},
    'InterruptibleMulticoreWrapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\concurrent\\InterruptibleMulticoreWrapper.java'},
    'Interval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Interval.java'},
    'IntervalTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IntervalTree.java'},
    'InvertedIndexByTokens': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\InvertedIndexByTokens.java'},
    'ItalianTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\italian\\ItalianTreebankLanguagePack.java'},
    'ItalianTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ItalianTreebankParserParams.java'},
    'Item': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\Item.java'},
    'IterableIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\IterableIterator.java'},
    'Iterables': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Iterables.java'},
    'JFlexDummyLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\JFlexDummyLexer.java'},
    'JJTTsurgeonParserState': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\JJTTsurgeonParserState.java'},
    'JSONAnnotationReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\JSONAnnotationReader.java'},
    'JSONOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\JSONOutputter.java'},
    'JarFileChooser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ui\\JarFileChooser.java'},
    'JavaUtilLoggingAdaptor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\JavaUtilLoggingAdaptor.java'},
    'JavaUtilLoggingHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\JavaUtilLoggingHandler.java'},
    'JodaTimeUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\JodaTimeUtils.java'},
    'JointParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\parsesegment\\JointParser.java'},
    'JointParsingModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\parsesegment\\JointParsingModel.java'},
    'JollyDayHolidays': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\JollyDayHolidays.java'},
    'KBPAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\KBPAnnotator.java'},
    'KBPBasicSpanishCorefSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\KBPBasicSpanishCorefSystem.java'},
    'KBPEnsembleExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\KBPEnsembleExtractor.java'},
    'KBPSemgrexExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\KBPSemgrexExtractor.java'},
    'KBPStatisticalExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\KBPStatisticalExtractor.java'},
    'KBPTokensregexExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\KBPTokensregexExtractor.java'},
    'KBestSequenceFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\KBestSequenceFinder.java'},
    'KNNClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\KNNClassifier.java'},
    'KNNClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\KNNClassifierFactory.java'},
    'KNNSceneGraphParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\KNNSceneGraphParser.java'},
    'KillAllIncomingEdges': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\KillAllIncomingEdges.java'},
    'KillNonRootedNodes': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\KillNonRootedNodes.java'},
    'LDCPosMapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\LDCPosMapper.java'},
    'LabelDictionary': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\LabelDictionary.java'},
    'LabeledATBDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\LabeledATBDataset.java'},
    'LabeledChunkIdentifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\LabeledChunkIdentifier.java'},
    'LabeledConstituent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LabeledConstituent.java'},
    'LabeledScoredConstituent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LabeledScoredConstituent.java'},
    'LabeledScoredConstituentFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LabeledScoredConstituentFactory.java'},
    'LabeledScoredTreeFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LabeledScoredTreeFactory.java'},
    'LabeledScoredTreeNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LabeledScoredTreeNode.java'},
    'LabeledScoredTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LabeledScoredTreeReaderFactory.java'},
    'LabeledWord': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\LabeledWord.java'},
    'LambdaSolve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\iis\\LambdaSolve.java'},
    'LambdaSolveTagger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\LambdaSolveTagger.java'},
    'LanguageInfo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\LanguageInfo.java'},
    'Lattice': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\Lattice.java'},
    'LatticeEdge': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\LatticeEdge.java'},
    'LatticeXMLReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\LatticeXMLReader.java'},
    'Lazy': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Lazy.java'},
    'LeafAncestorEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\LeafAncestorEval.java'},
    'LearnImportantFeatures': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\LearnImportantFeatures.java'},
    'LeastRecentlyUsedCache': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\LeastRecentlyUsedCache.java'},
    'LeftHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LeftHeadFinder.java'},
    'LengthTreeFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\LengthTreeFilter.java'},
    'LexerTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\LexerTokenizer.java'},
    'LexerUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\LexerUtils.java'},
    'LexicalizedParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\LexicalizedParser.java'},
    'LexicalizedParserClient': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\server\\LexicalizedParserClient.java'},
    'LexicalizedParserQuery': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\LexicalizedParserQuery.java'},
    'LexicalizedParserServer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\server\\LexicalizedParserServer.java'},
    'LibSVMReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\LibSVMReaderAndWriter.java'},
    'LineIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\LineIterator.java'},
    'LinearClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LinearClassifier.java'},
    'LinearClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LinearClassifierFactory.java'},
    'LinearCliquePotentialFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\LinearCliquePotentialFunction.java'},
    'LinearGrammarSmoother': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\LinearGrammarSmoother.java'},
    'LogConditionalEqConstraintFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogConditionalEqConstraintFunction.java'},
    'LogConditionalObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogConditionalObjectiveFunction.java'},
    'LogLikelihoodDifferentiableFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\learning\\LogLikelihoodDifferentiableFunction.java'},
    'LogPrior': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogPrior.java'},
    'LogRecordHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\LogRecordHandler.java'},
    'LogisticClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogisticClassifier.java'},
    'LogisticClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogisticClassifierFactory.java'},
    'LogisticObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogisticObjectiveFunction.java'},
    'LogisticUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\LogisticUtils.java'},
    'LooseConversationalSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\LooseConversationalSieve.java'},
    'LooseConversationalSpeakerSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\MSSieves\\LooseConversationalSpeakerSieve.java'},
    'LowercaseAndAmericanizeFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\LowercaseAndAmericanizeFunction.java'},
    'LowercaseFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\LowercaseFunction.java'},
    'LuceneSentenceIndex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\LuceneSentenceIndex.java'},
    'MLEDependencyGrammar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\MLEDependencyGrammar.java'},
    'MLEDependencyGrammarExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\MLEDependencyGrammarExtractor.java'},
    'MSSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\MSSieves\\MSSieve.java'},
    'MUCDocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\MUCDocumentReaderAndWriter.java'},
    'MUCMentionExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\MUCMentionExtractor.java'},
    'MWEFrequencyDist': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\scripts\\MWEFrequencyDist.java'},
    'MWEPreprocessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\pipeline\\MWEPreprocessor.java'},
    'MWETreeVisitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\MWETreeVisitor.java'},
    'MWETreeVisitorExternal': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\MWETreeVisitorExternal.java'},
    'MWTAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\MWTAnnotator.java'},
    'MachineReading': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\MachineReading.java'},
    'Macros': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\Macros.java'},
    'MajoritySpeakerSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\MSSieves\\MajoritySpeakerSieve.java'},
    'MakePrefixFile': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\util\\MakePrefixFile.java'},
    'MalletFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\MalletFeatureFactory.java'},
    'MalletReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\MalletReaderAndWriter.java'},
    'ManipulateTopBracket': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\ManipulateTopBracket.java'},
    'MapFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MapFactory.java'},
    'MapList': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MapList.java'},
    'Maps': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Maps.java'},
    'Match': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\Match.java'},
    'MatchedExpression': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\MatchedExpression.java'},
    'MatchesPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\MatchesPanel.java'},
    'MaxMarginMentionRanker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\MaxMarginMentionRanker.java'},
    'MaxMatchSegmenter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\MaxMatchSegmenter.java'},
    'MaxSizeConcurrentHashSet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MaxSizeConcurrentHashSet.java'},
    'MaxentTagger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\MaxentTagger.java'},
    'MaxentTaggerGUI': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\MaxentTaggerGUI.java'},
    'MaxentTaggerServer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\MaxentTaggerServer.java'},
    'MemoryEvaluator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\MemoryEvaluator.java'},
    'MemoryMonitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MemoryMonitor.java'},
    'MemoryTreebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\MemoryTreebank.java'},
    'Mention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\data\\Mention.java'},
    'MentionDetectionClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\md\\MentionDetectionClassifier.java'},
    'MentionDetectionEvaluator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\misc\\MentionDetectionEvaluator.java'},
    'MentionExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\MentionExtractor.java'},
    'MetaClass': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MetaClass.java'},
    'MetaFeatureExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\MetaFeatureExtractor.java'},
    'MetadataWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\MetadataWriter.java'},
    'MixDisambiguation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\truecaser\\MixDisambiguation.java'},
    'MnistConverter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\demo\\MnistConverter.java'},
    'ModelBatch': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\storage\\ModelBatch.java'},
    'ModelSerializer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\ModelSerializer.java'},
    'Morpha': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\Morpha.java'},
    'MorphaAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\MorphaAnnotator.java'},
    'MorphoFeatureSpecification': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\morph\\MorphoFeatureSpecification.java'},
    'MorphoFeatures': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\morph\\MorphoFeatures.java'},
    'Morphology': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\Morphology.java'},
    'MoveNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\MoveNode.java'},
    'MultiClassAccuracyStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\MultiClassAccuracyStats.java'},
    'MultiClassChunkEvalStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\MultiClassChunkEvalStats.java'},
    'MultiClassPrecisionRecallExtendedStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\MultiClassPrecisionRecallExtendedStats.java'},
    'MultiClassPrecisionRecallStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\MultiClassPrecisionRecallStats.java'},
    'MultiMatch': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\MultiMatch.java'},
    'MultiNodePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\MultiNodePattern.java'},
    'MultiPatternMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\MultiPatternMatcher.java'},
    'MultiTokenTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\MultiTokenTag.java'},
    'MultiWordPreprocessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\pipeline\\MultiWordPreprocessor.java'},
    'MultiWordStringMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\MultiWordStringMatcher.java'},
    'MultiWordTreeExpander': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\pipeline\\MultiWordTreeExpander.java'},
    'MulticoreWrapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\concurrent\\MulticoreWrapper.java'},
    'MulticoreWrapperDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\documentation\\MulticoreWrapperDemo.java'},
    'Multinomial': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\Multinomial.java'},
    'MultinomialLogisticClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\MultinomialLogisticClassifier.java'},
    'MungeTreesWithMorfetteAnalyses': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\scripts\\MungeTreesWithMorfetteAnalyses.java'},
    'MutableDouble': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MutableDouble.java'},
    'MutableInteger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MutableInteger.java'},
    'MutableLong': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\MutableLong.java'},
    'NBLinearClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\NBLinearClassifierFactory.java'},
    'NDArray': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\NDArray.java'},
    'NDArrayDoubles': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\model\\NDArrayDoubles.java'},
    'NERClassifierCombiner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\NERClassifierCombiner.java'},
    'NERCombinerAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\NERCombinerAnnotator.java'},
    'NERDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\demo\\NERDemo.java'},
    'NERFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\NERFeatureFactory.java'},
    'NERGUI': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\NERGUI.java'},
    'NERServer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\NERServer.java'},
    'NERServlet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\ner\\webapp\\NERServlet.java'},
    'NPTmpRetainingTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\NPTmpRetainingTreeNormalizer.java'},
    'NaiveBayesClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\NaiveBayesClassifier.java'},
    'NaiveBayesClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\NaiveBayesClassifierFactory.java'},
    'NameMatch': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\sieve\\NameMatch.java'},
    'NamedDependency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\NamedDependency.java'},
    'NaturalLogicAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\NaturalLogicAnnotator.java'},
    'NaturalLogicWeights': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\NaturalLogicWeights.java'},
    'NegraHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraHeadFinder.java'},
    'NegraLabel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraLabel.java'},
    'NegraLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraLexer.java'},
    'NegraPennCollinizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\NegraPennCollinizer.java'},
    'NegraPennLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraPennLanguagePack.java'},
    'NegraPennLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraPennLexer.java'},
    'NegraPennTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraPennTokenizer.java'},
    'NegraPennTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraPennTreeNormalizer.java'},
    'NegraPennTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\negra\\NegraPennTreeReaderFactory.java'},
    'NegraPennTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\NegraPennTreebankParserParams.java'},
    'NeuralCorefAlgorithm': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\NeuralCorefAlgorithm.java'},
    'NeuralCorefDataExporter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\NeuralCorefDataExporter.java'},
    'NeuralCorefModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\NeuralCorefModel.java'},
    'NeuralCorefProperties': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\neural\\NeuralCorefProperties.java'},
    'NeuralUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\NeuralUtils.java'},
    'NewlineLogFormatter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\NewlineLogFormatter.java'},
    'NilLabelValidator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\NilLabelValidator.java'},
    'NoPunctuationHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\common\\NoPunctuationHeadFinder.java'},
    'NodeAttributes': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\NodeAttributes.java'},
    'NodePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\NodePattern.java'},
    'NodePruner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\NodePruner.java'},
    'NoisyLabelLinearCliquePotentialFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\NoisyLabelLinearCliquePotentialFunction.java'},
    'NonDict2': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\NonDict2.java'},
    'NonLinearCliquePotentialFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\NonLinearCliquePotentialFunction.java'},
    'NonLinearSecondOrderCliquePotentialFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\crf\\NonLinearSecondOrderCliquePotentialFunction.java'},
    'NullGrammarProjection': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\NullGrammarProjection.java'},
    'NullOutputStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\NullOutputStream.java'},
    'NumberAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\NumberAnnotator.java'},
    'NumberMatchingRegex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\math\\NumberMatchingRegex.java'},
    'NumberNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\NumberNormalizer.java'},
    'NumberRangeFileFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\NumberRangeFileFilter.java'},
    'NumberRangesFileFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\NumberRangesFileFilter.java'},
    'NumberSequenceClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\regexp\\NumberSequenceClassifier.java'},
    'OSXAdapter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\OSXAdapter.java'},
    'ObjectBank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\ObjectBank.java'},
    'ObjectBankWrapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\ObjectBankWrapper.java'},
    'ObjectSceneGraphParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\ObjectSceneGraphParser.java'},
    'OneNameSentenceSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\OneNameSentenceSieve.java'},
    'OneToOneMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\OneToOneMap.java'},
    'OneVsAllClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\OneVsAllClassifier.java'},
    'OntoNotesFilePreparation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\OntoNotesFilePreparation.java'},
    'OntoNotesUDUpdater': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\OntoNotesUDUpdater.java'},
    'OpenIEDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\OpenIEDemo.java'},
    'OpenIEParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\OpenIEParser.java'},
    'OpenIEServlet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\demo\\OpenIEServlet.java'},
    'OpenPageDialog': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\ui\\OpenPageDialog.java'},
    'OperatorSpec': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\OperatorSpec.java'},
    'Options': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\Options.java'},
    'OracleSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\sieve\\OracleSieve.java'},
    'OrderedCombinationTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\OrderedCombinationTreeNormalizer.java'},
    'OutputHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\OutputHandler.java'},
    'OutputSubtrees': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\OutputSubtrees.java'},
    'OutsideRuleFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\OutsideRuleFilter.java'},
    'POSTaggerAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\POSTaggerAnnotator.java'},
    'PRCurve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\PRCurve.java'},
    'PTB2TextLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\PTB2TextLexer.java'},
    'PTBEscapingProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\PTBEscapingProcessor.java'},
    'PTBLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\PTBLexer.java'},
    'PTBTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\PTBTokenizer.java'},
    'PaddedList': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\PaddedList.java'},
    'Pair': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Pair.java'},
    'PairsHolder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\PairsHolder.java'},
    'PairwiseModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\PairwiseModel.java'},
    'PairwiseModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\PairwiseModelTrainer.java'},
    'ParagraphAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\paragraphs\\ParagraphAnnotator.java'},
    'ParagraphEndQuoteClosestSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\ParagraphEndQuoteClosestSieve.java'},
    'ParentAnnotationStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ParentAnnotationStats.java'},
    'ParseAndPrintMatrices': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\ParseAndPrintMatrices.java'},
    'ParseAndSetLabels': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\ParseAndSetLabels.java'},
    'ParseFiles': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ParseFiles.java'},
    'ParsedGigawordReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\ParsedGigawordReader.java'},
    'Parser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\ui\\Parser.java'},
    'ParserAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ParserAnnotator.java'},
    'ParserAnnotatorUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ParserAnnotatorUtils.java'},
    'ParserConstraint': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\common\\ParserConstraint.java'},
    'ParserDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\demo\\ParserDemo.java'},
    'ParserDemo2': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\demo\\ParserDemo2.java'},
    'ParserGrammar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\common\\ParserGrammar.java'},
    'ParserPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\ui\\ParserPanel.java'},
    'ParserUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\common\\ParserUtils.java'},
    'ParsingSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\ParsingSystem.java'},
    'ParsingThreadsafeProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\common\\ParsingThreadsafeProcessor.java'},
    'PascalTemplate': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\pascal\\PascalTemplate.java'},
    'PathExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\PathExtractor.java'},
    'Pattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\Pattern.java'},
    'PatternFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\PatternFactory.java'},
    'PatternToken': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\PatternToken.java'},
    'PatternsForEachToken': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\PatternsForEachToken.java'},
    'PatternsForEachTokenDB': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\PatternsForEachTokenDB.java'},
    'PatternsForEachTokenInMemory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\PatternsForEachTokenInMemory.java'},
    'PatternsForEachTokenLucene': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\PatternsForEachTokenLucene.java'},
    'PennTreeReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\PennTreeReader.java'},
    'PennTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\PennTreeReaderFactory.java'},
    'PennTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\PennTreebankLanguagePack.java'},
    'PerceptronModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\PerceptronModel.java'},
    'Person': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Person.java'},
    'PhraseScorer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\PhraseScorer.java'},
    'PhraseTable': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\PhraseTable.java'},
    'PlainTextDocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\PlainTextDocumentReaderAndWriter.java'},
    'PluralAcronymDetector': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ExtractorFramesRare.java'},
    'Pointer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Pointer.java'},
    'Polarity': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\Polarity.java'},
    'Ports': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\net\\Ports.java'},
    'PostSplitter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\PostSplitter.java'},
    'PrecisionRecallStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\PrecisionRecallStats.java'},
    'Preferences': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\Preferences.java'},
    'PreferencesPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\PreferencesPanel.java'},
    'PresetSequenceClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\PresetSequenceClassifier.java'},
    'PrettyLogger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\PrettyLogger.java'},
    'PrintTagList': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\PrintTagList.java'},
    'Prior': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\pascal\\Prior.java'},
    'Problem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\maxent\\Problem.java'},
    'ProcessSemgrexRequest': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ProcessSemgrexRequest.java'},
    'ProcessTokensRegexRequest': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\ProcessTokensRegexRequest.java'},
    'ProcessTsurgeonRequest': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\ProcessTsurgeonRequest.java'},
    'ProcessUniversalEnhancerRequest': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\ProcessUniversalEnhancerRequest.java'},
    'ProjectionScorer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\ProjectionScorer.java'},
    'PropertiesUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\PropertiesUtils.java'},
    'ProtobufAnnotationSerializer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ProtobufAnnotationSerializer.java'},
    'PruneNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\PruneNode.java'},
    'PunctCountingTreeVisitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\PunctCountingTreeVisitor.java'},
    'PunctEquivalenceClasser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\PunctEquivalenceClasser.java'},
    'PunctFrequencyDist': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\PunctFrequencyDist.java'},
    'QMSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\QMSieve.java'},
    'QNMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\QNMinimizer.java'},
    'QPTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\QPTreeTransformer.java'},
    'Quadruple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Quadruple.java'},
    'QuantifiableEntityExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\qe\\QuantifiableEntityExtractor.java'},
    'QuantifiableEntityNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\QuantifiableEntityNormalizer.java'},
    'QuantifiableEntityNormalizingAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\QuantifiableEntityNormalizingAnnotator.java'},
    'QuasiDeterminizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\QuasiDeterminizer.java'},
    'QuestionToStatementTranslator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\QuestionToStatementTranslator.java'},
    'Quintuple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Quintuple.java'},
    'QuoteAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\QuoteAnnotator.java'},
    'QuoteAttributionAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\QuoteAttributionAnnotator.java'},
    'QuoteAttributionEvaluation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\QuoteAttributionEvaluation.java'},
    'QuoteAttributionUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\QuoteAttributionUtils.java'},
    'RFSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\sieve\\RFSieve.java'},
    'RHSFrequency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\RHSFrequency.java'},
    'RNNCoreAnnotations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\rnn\\RNNCoreAnnotations.java'},
    'RNNOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\RNNOptions.java'},
    'RNNTrainOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\RNNTrainOptions.java'},
    'RVFDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\RVFDataset.java'},
    'RVFDatum': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\RVFDatum.java'},
    'RadicalMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\RadicalMap.java'},
    'RandomForest': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\hybrid\\rf\\RandomForest.java'},
    'RandomWalk': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\RandomWalk.java'},
    'ReadDataTagged': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\ReadDataTagged.java'},
    'ReadSentimentDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\ReadSentimentDataset.java'},
    'ReaderInputStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\ReaderInputStream.java'},
    'ReaderIteratorFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\ReaderIteratorFactory.java'},
    'RecordIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\RecordIterator.java'},
    'RecursiveTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\RecursiveTreeTransformer.java'},
    'RedirectOutputHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\RedirectOutputHandler.java'},
    'Redwood': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\Redwood.java'},
    'RedwoodConfiguration': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\RedwoodConfiguration.java'},
    'RedwoodPrintStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\RedwoodPrintStream.java'},
    'ReflectionLoading': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ReflectionLoading.java'},
    'RegExFileFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\RegExFileFilter.java'},
    'RegexNERAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\RegexNERAnnotator.java'},
    'RegexNERSequenceClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\regexp\\RegexNERSequenceClassifier.java'},
    'RegexStringFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\RegexStringFilter.java'},
    'RelabelNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\RelabelNode.java'},
    'Relation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\Relation.java'},
    'RelationExtractorAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\RelationExtractorAnnotator.java'},
    'RelationExtractorResultsPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\RelationExtractorResultsPrinter.java'},
    'RelationFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\RelationFeatureFactory.java'},
    'RelationMention': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\RelationMention.java'},
    'RelationMentionFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\structure\\RelationMentionFactory.java'},
    'RelationTriple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\util\\RelationTriple.java'},
    'RelationTripleSegmenter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\RelationTripleSegmenter.java'},
    'RemoveEdge': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\RemoveEdge.java'},
    'RemoveNamedEdge': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\RemoveNamedEdge.java'},
    'RepeatedRecordHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\RepeatedRecordHandler.java'},
    'ReplaceNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\ReplaceNode.java'},
    'RerankingParserQuery': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\RerankingParserQuery.java'},
    'RerouteChannel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\RerouteChannel.java'},
    'ResettableReaderIteratorFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\ResettableReaderIteratorFactory.java'},
    'ResultStoringFloatMonitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\ResultStoringFloatMonitor.java'},
    'ResultStoringMonitor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\ResultStoringMonitor.java'},
    'ResultsPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\ResultsPrinter.java'},
    'RightHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\RightHeadFinder.java'},
    'RobustTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\ace\\reader\\RobustTokenizer.java'},
    'RothCONLL04Reader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\roth\\RothCONLL04Reader.java'},
    'RothEntityExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\roth\\RothEntityExtractor.java'},
    'RothResultsByRelation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\domains\\roth\\RothResultsByRelation.java'},
    'RuleBasedCorefMentionFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\RuleBasedCorefMentionFinder.java'},
    'RuleBasedParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\RuleBasedParser.java'},
    'RuleBranchingFactor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\RuleBranchingFactor.java'},
    'Rules': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\Rules.java'},
    'RunParagraphAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\paragraphs\\RunParagraphAnnotator.java'},
    'SGDMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\SGDMinimizer.java'},
    'SGDToQNMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\SGDToQNMinimizer.java'},
    'SGDWithAdaGradAndFOBOS': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\SGDWithAdaGradAndFOBOS.java'},
    'SLF4JHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\SLF4JHandler.java'},
    'SMDMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\SMDMinimizer.java'},
    'SPIEDServlet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\SPIEDServlet.java'},
    'SQLConnection': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\SQLConnection.java'},
    'SQNMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\SQNMinimizer.java'},
    'SUTime': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\SUTime.java'},
    'SUTimeMain': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\SUTimeMain.java'},
    'SUTimePipeline': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\suservlet\\SUTimePipeline.java'},
    'SUTimeServlet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\suservlet\\SUTimeServlet.java'},
    'SUTimeSimpleParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\SUTimeSimpleParser.java'},
    'SVMLightClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\SVMLightClassifier.java'},
    'SVMLightClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\SVMLightClassifierFactory.java'},
    'Sandbox': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\Sandbox.java'},
    'ScaledSGDMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\ScaledSGDMinimizer.java'},
    'SceneGraph': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraph.java'},
    'SceneGraphAttribute': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphAttribute.java'},
    'SceneGraphEvaluation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphEvaluation.java'},
    'SceneGraphImage': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\image\\SceneGraphImage.java'},
    'SceneGraphImageAttribute': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\image\\SceneGraphImageAttribute.java'},
    'SceneGraphImageCleaner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphImageCleaner.java'},
    'SceneGraphImageDependencyParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphImageDependencyParser.java'},
    'SceneGraphImageFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphImageFilter.java'},
    'SceneGraphImageObject': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\image\\SceneGraphImageObject.java'},
    'SceneGraphImagePCFGParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphImagePCFGParser.java'},
    'SceneGraphImageRegion': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\image\\SceneGraphImageRegion.java'},
    'SceneGraphImageRelationship': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\image\\SceneGraphImageRelationship.java'},
    'SceneGraphImageUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\image\\SceneGraphImageUtils.java'},
    'SceneGraphNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphNode.java'},
    'SceneGraphRelation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphRelation.java'},
    'SceneGraphSentenceMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphSentenceMatcher.java'},
    'SceneGraphUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SceneGraphUtils.java'},
    'ScorePatterns': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ScorePatterns.java'},
    'ScorePatternsF1': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\ScorePatternsF1.java'},
    'ScorePatternsFreqBased': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ScorePatternsFreqBased.java'},
    'ScorePatternsRatioModifiedFreq': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ScorePatternsRatioModifiedFreq.java'},
    'ScorePhrases': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ScorePhrases.java'},
    'ScorePhrasesAverageFeatures': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ScorePhrasesAverageFeatures.java'},
    'ScorePhrasesLearnFeatWt': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\ScorePhrasesLearnFeatWt.java'},
    'ScoredComparator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ScoredComparator.java'},
    'ScoredObject': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ScoredObject.java'},
    'ScrollableTreeJPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\ScrollableTreeJPanel.java'},
    'SegDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\demo\\SegDemo.java'},
    'SemanticGraph': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\SemanticGraph.java'},
    'SemanticGraphEdge': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\SemanticGraphEdge.java'},
    'SemanticGraphEnhancer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SemanticGraphEnhancer.java'},
    'SemanticGraphFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\SemanticGraphFactory.java'},
    'SemanticGraphFormatter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\SemanticGraphFormatter.java'},
    'SemanticGraphPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\SemanticGraphPrinter.java'},
    'SemanticGraphUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\SemanticGraphUtils.java'},
    'SemanticHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SemanticHeadFinder.java'},
    'SemgrexBatchParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\SemgrexBatchParser.java'},
    'SemgrexDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\demo\\SemgrexDemo.java'},
    'SemgrexMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\SemgrexMatcher.java'},
    'SemgrexParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\SemgrexParser.java'},
    'SemgrexParserTokenManager': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\SemgrexParserTokenManager.java'},
    'SemgrexPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\SemgrexPattern.java'},
    'SemiSupervisedLogConditionalObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\SemiSupervisedLogConditionalObjectiveFunction.java'},
    'Sentence': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\Sentence.java'},
    'SentenceAlgorithms': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\SentenceAlgorithms.java'},
    'SentenceAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\SentenceAnnotator.java'},
    'SentenceFragment': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\naturalli\\SentenceFragment.java'},
    'SentenceIndex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\SentenceIndex.java'},
    'SentenceUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\SentenceUtils.java'},
    'SentimentAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\SentimentAnnotator.java'},
    'SentimentCostAndGradient': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\SentimentCostAndGradient.java'},
    'SentimentModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\SentimentModel.java'},
    'SentimentPipeline': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\SentimentPipeline.java'},
    'SentimentTraining': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\SentimentTraining.java'},
    'SentimentUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\SentimentUtils.java'},
    'SeqClassifierFlags': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\SeqClassifierFlags.java'},
    'SequenceGibbsSampler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\SequenceGibbsSampler.java'},
    'SequenceMatchRules': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\SequenceMatchRules.java'},
    'SequenceMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\SequenceMatcher.java'},
    'SequencePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\SequencePattern.java'},
    'SequenceSampler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\SequenceSampler.java'},
    'SerializedAnnotationCreator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\SerializedAnnotationCreator.java'},
    'ServerAnnotatorImplementations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\ServerAnnotatorImplementations.java'},
    'SetRoots': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\SetRoots.java'},
    'Sets': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Sets.java'},
    'ShiftParamsLogisticClassifierFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\ShiftParamsLogisticClassifierFactory.java'},
    'ShiftParamsLogisticObjectiveFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\ShiftParamsLogisticObjectiveFunction.java'},
    'ShiftReduceDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\demo\\ShiftReduceDemo.java'},
    'ShiftReduceOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\ShiftReduceOptions.java'},
    'ShiftReduceParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\ShiftReduceParser.java'},
    'ShiftReduceParserQuery': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\ShiftReduceParserQuery.java'},
    'ShiftTransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\ShiftTransition.java'},
    'Sieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\Sieve.java'},
    'SieveCoreferenceSystem': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\SieveCoreferenceSystem.java'},
    'SieveOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\dcoref\\SieveOptions.java'},
    'Sighan2005DocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\wordseg\\Sighan2005DocumentReaderAndWriter.java'},
    'SimpleCharStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\parser\\SimpleCharStream.java'},
    'SimpleConstituent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SimpleConstituent.java'},
    'SimpleConstituentFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SimpleConstituentFactory.java'},
    'SimpleGoodTuring': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\SimpleGoodTuring.java'},
    'SimpleLinearClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\SimpleLinearClassifier.java'},
    'SimpleNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\SimpleNode.java'},
    'SimplePronounResolution': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\scenegraph\\SimplePronounResolution.java'},
    'SimpleQuantifiableEntity': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\qe\\SimpleQuantifiableEntity.java'},
    'SimpleSentiment': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sentiment\\SimpleSentiment.java'},
    'SimpleTensor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\SimpleTensor.java'},
    'SimpleTokenize': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\common\\SimpleTokenize.java'},
    'SimpleTree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SimpleTree.java'},
    'SimpleTreeFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SimpleTreeFactory.java'},
    'SingletonPredictor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\misc\\SingletonPredictor.java'},
    'SisterAnnotationStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\SisterAnnotationStats.java'},
    'SloppyMath': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\math\\SloppyMath.java'},
    'Span': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Span.java'},
    'SpanishDocument': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\SpanishDocument.java'},
    'SpanishHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishHeadFinder.java'},
    'SpanishLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\process\\SpanishLexer.java'},
    'SpanishSplitTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishSplitTreeNormalizer.java'},
    'SpanishTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\process\\SpanishTokenizer.java'},
    'SpanishTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishTreeNormalizer.java'},
    'SpanishTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishTreeReaderFactory.java'},
    'SpanishTreebankLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishTreebankLanguagePack.java'},
    'SpanishTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\SpanishTreebankParserParams.java'},
    'SpanishUnknownWordModel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\SpanishUnknownWordModel.java'},
    'SpanishUnknownWordModelTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\SpanishUnknownWordModelTrainer.java'},
    'SpanishUnknownWordSignatures': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\SpanishUnknownWordSignatures.java'},
    'SpanishVerbStripper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\SpanishVerbStripper.java'},
    'SpanishXMLTreeReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishXMLTreeReader.java'},
    'SpanishXMLTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\spanish\\SpanishXMLTreeReaderFactory.java'},
    'SparseAdaGradMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\SparseAdaGradMinimizer.java'},
    'SpeakerInfo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\data\\SpeakerInfo.java'},
    'SplitCanditoTrees': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\scripts\\SplitCanditoTrees.java'},
    'SplitMaker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\hebrew\\SplitMaker.java'},
    'SplitTrainingSet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SplitTrainingSet.java'},
    'SplittingGrammarExtractor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\SplittingGrammarExtractor.java'},
    'SsurgAndPred': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\pred\\SsurgAndPred.java'},
    'SsurgOrPred': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\pred\\SsurgOrPred.java'},
    'Ssurgeon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\Ssurgeon.java'},
    'SsurgeonEdit': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\SsurgeonEdit.java'},
    'SsurgeonPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\SsurgeonPattern.java'},
    'SsurgeonWordlist': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\semgrex\\ssurgeon\\SsurgeonWordlist.java'},
    'StanfordCoreNLP': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\StanfordCoreNLP.java'},
    'StanfordCoreNLPClient': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\StanfordCoreNLPClient.java'},
    'StanfordCoreNLPServer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\StanfordCoreNLPServer.java'},
    'StanfordCoreNlpDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\demo\\StanfordCoreNlpDemo.java'},
    'StanfordCoreNlpDemoChinese': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\demo\\StanfordCoreNlpDemoChinese.java'},
    'StanfordRedwoodConfiguration': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\StanfordRedwoodConfiguration.java'},
    'StartAndEndArabicSegmenterFeatureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\process\\StartAndEndArabicSegmenterFeatureFactory.java'},
    'StatTokSent': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\stattok\\StatTokSent.java'},
    'StatTokSentAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\StatTokSentAnnotator.java'},
    'StatTokSentTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\stattok\\StatTokSentTrainer.java'},
    'State': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\State.java'},
    'StatisticalCorefAlgorithm': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\StatisticalCorefAlgorithm.java'},
    'StatisticalCorefProperties': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\StatisticalCorefProperties.java'},
    'StatisticalCorefTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\statistical\\StatisticalCorefTrainer.java'},
    'Stemmer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\Stemmer.java'},
    'StochasticMinimizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\optimization\\StochasticMinimizer.java'},
    'StopList': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\StopList.java'},
    'StoplistFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\StoplistFilter.java'},
    'StreamGobbler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\StreamGobbler.java'},
    'StringDictionary': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\machinereading\\common\\StringDictionary.java'},
    'StringLabel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\StringLabel.java'},
    'StringLabelFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\StringLabelFactory.java'},
    'StringLabeledScoredTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\StringLabeledScoredTreeReaderFactory.java'},
    'StringOutputStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\StringOutputStream.java'},
    'StringParsingTask': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\StringParsingTask.java'},
    'StringUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\StringUtils.java'},
    'StripTagsProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\StripTagsProcessor.java'},
    'SupervisedSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\SupervisedSieve.java'},
    'SupervisedSieveTraining': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\training\\SupervisedSieveTraining.java'},
    'SurfacePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\SurfacePattern.java'},
    'SurfacePatternFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\surface\\SurfacePatternFactory.java'},
    'SynchronizedInterner': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\concurrent\\SynchronizedInterner.java'},
    'SynchronizedTreeTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\SynchronizedTreeTransformer.java'},
    'SystemUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\SystemUtils.java'},
    'TSVSentenceIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\TSVSentenceIterator.java'},
    'TSVTaggedFileReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\io\\TSVTaggedFileReader.java'},
    'TSVUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\TSVUtils.java'},
    'TTags': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\TTags.java'},
    'TableFactor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\loglinear\\inference\\TableFactor.java'},
    'Tag': {'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\Tag.java'},
    'TagCount': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\TagCount.java'},
    'TaggedArabicDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\TaggedArabicDataset.java'},
    'TaggedFileRecord': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\io\\TaggedFileRecord.java'},
    'TaggedTextOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TaggedTextOutputter.java'},
    'TaggedWord': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\TaggedWord.java'},
    'TaggedWordFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\TaggedWordFactory.java'},
    'Tagger': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\common\\Tagger.java'},
    'TaggerConfig': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\TaggerConfig.java'},
    'TaggerDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\documentation\\TaggerDemo.java'},
    'TaggerDemo2': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\documentation\\TaggerDemo2.java'},
    'TaggerExperiments': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\TaggerExperiments.java'},
    'TaggerFeature': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\maxent\\TaggerFeature.java'},
    'TaggerReranker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TaggerReranker.java'},
    'TaggingEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\TaggingEval.java'},
    'Tags': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\types\\Tags.java'},
    'Tdiff': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\Tdiff.java'},
    'TeXHyphenator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\pascal\\TeXHyphenator.java'},
    'TeeStream': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\io\\TeeStream.java'},
    'TextAnnotationCreator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TextAnnotationCreator.java'},
    'TextAnnotationPatterns': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\TextAnnotationPatterns.java'},
    'TextAnnotationPatternsInterface': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\patterns\\TextAnnotationPatternsInterface.java'},
    'TextOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TextOutputter.java'},
    'TextTaggedFileReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\io\\TextTaggedFileReader.java'},
    'ThreeDimensionalCollectionValuedMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ThreeDimensionalCollectionValuedMap.java'},
    'ThreeDimensionalMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ThreeDimensionalMap.java'},
    'TimeAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\TimeAnnotator.java'},
    'TimeExpression': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\TimeExpression.java'},
    'TimeExpressionExtractorFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\TimeExpressionExtractorFactory.java'},
    'TimeExpressionExtractorImpl': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\TimeExpressionExtractorImpl.java'},
    'Timex': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\Timex.java'},
    'TimexTreeAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\time\\TimexTreeAnnotator.java'},
    'Timing': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Timing.java'},
    'Token': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\simple\\Token.java'},
    'TokenMgrError': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\parser\\TokenMgrError.java'},
    'TokenSequenceParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\parser\\TokenSequenceParser.java'},
    'TokenSequenceParserTokenManager': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\parser\\TokenSequenceParserTokenManager.java'},
    'TokenSequencePattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\TokenSequencePattern.java'},
    'TokenizerAdapter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\TokenizerAdapter.java'},
    'TokenizerAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TokenizerAnnotator.java'},
    'TokensRegexAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TokensRegexAnnotator.java'},
    'TokensRegexAnnotatorDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\demo\\TokensRegexAnnotatorDemo.java'},
    'TokensRegexDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\demo\\TokensRegexDemo.java'},
    'TokensRegexExample': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\examples\\TokensRegexExample.java'},
    'TokensRegexMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\demo\\TokensRegexMatcher.java'},
    'TokensRegexMatcherDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\demo\\TokensRegexMatcherDemo.java'},
    'TokensRegexNERAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TokensRegexNERAnnotator.java'},
    'TokensRegexRetokenizeDemo': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\demo\\TokensRegexRetokenizeDemo.java'},
    'TooltipJList': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\swing\\TooltipJList.java'},
    'TopNGramRecord': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\rnn\\TopNGramRecord.java'},
    'TraditionalSimplifiedCharacterMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\TraditionalSimplifiedCharacterMap.java'},
    'TrainOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TrainOptions.java'},
    'TrainingExample': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\TrainingExample.java'},
    'TransducerGraph': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\fsm\\TransducerGraph.java'},
    'TransformXML': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\TransformXML.java'},
    'TransformingTreebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TransformingTreebank.java'},
    'TransitionTypeEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\TransitionTypeEval.java'},
    'Tree': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Tree.java'},
    'TreeAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TreeAnnotator.java'},
    'TreeAnnotatorAndBinarizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TreeAnnotatorAndBinarizer.java'},
    'TreeBinarizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TreeBinarizer.java'},
    'TreeCollinizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TreeCollinizer.java'},
    'TreeFromFile': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\TreeFromFile.java'},
    'TreeFunctions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeFunctions.java'},
    'TreeGraphNode': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeGraphNode.java'},
    'TreeGraphNodeFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeGraphNodeFactory.java'},
    'TreeJPanel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\ui\\TreeJPanel.java'},
    'TreeLeafLabelTransformer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeLeafLabelTransformer.java'},
    'TreeLemmatizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeLemmatizer.java'},
    'TreeLengthComparator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeLengthComparator.java'},
    'TreeLocation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\TreeLocation.java'},
    'TreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeNormalizer.java'},
    'TreePrint': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreePrint.java'},
    'TreeRecorder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\TreeRecorder.java'},
    'TreeShapedStack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\TreeShapedStack.java'},
    'TreeSpanScoring': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\TreeSpanScoring.java'},
    'TreeTaggedFileReader': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\tagger\\io\\TreeTaggedFileReader.java'},
    'TreeToBracketProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeToBracketProcessor.java'},
    'TreeToMorfette': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\french\\scripts\\TreeToMorfette.java'},
    'TreeToTSV': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\spanish\\scripts\\TreeToTSV.java'},
    'TreeTokenizerFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreeTokenizerFactory.java'},
    'Treebank': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Treebank.java'},
    'TreebankAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TreebankAnnotator.java'},
    'TreebankFactoredLexiconStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\eval\\TreebankFactoredLexiconStats.java'},
    'TreebankPreprocessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\TreebankPreprocessor.java'},
    'TreebankStats': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\eval\\TreebankStats.java'},
    'TreebankTagUpdater': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TreebankTagUpdater.java'},
    'Treebanks': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Treebanks.java'},
    'Trees': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\Trees.java'},
    'TregexGUI': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\gui\\TregexGUI.java'},
    'TregexMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\TregexMatcher.java'},
    'TregexParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\TregexParser.java'},
    'TregexParserTokenManager': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\TregexParserTokenManager.java'},
    'TregexPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\TregexPattern.java'},
    'TregexPatternCompiler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\TregexPatternCompiler.java'},
    'TregexPoweredTreebankParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TregexPoweredTreebankParserParams.java'},
    'TrieMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\TrieMap.java'},
    'TrieMapMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\TrieMapMatcher.java'},
    'TrieMapUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\matcher\\TrieMapUtils.java'},
    'TrigramSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\TrigramSieve.java'},
    'Trilean': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Trilean.java'},
    'Triple': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\Triple.java'},
    'TrueCaseAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\TrueCaseAnnotator.java'},
    'TrueCasingForNISTDocumentReaderAndWriter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\TrueCasingForNISTDocumentReaderAndWriter.java'},
    'TsarfatyEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\TsarfatyEval.java'},
    'Tsurgeon': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\Tsurgeon.java'},
    'TsurgeonMatcher': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\TsurgeonMatcher.java'},
    'TsurgeonParser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\TsurgeonParser.java'},
    'TsurgeonParserTokenManager': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\TsurgeonParserTokenManager.java'},
    'TsurgeonPattern': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\TsurgeonPattern.java'},
    'TsurgeonPatternRoot': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\tsurgeon\\TsurgeonPatternRoot.java'},
    'TueBaDZHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\tuebadz\\TueBaDZHeadFinder.java'},
    'TueBaDZLanguagePack': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\tuebadz\\TueBaDZLanguagePack.java'},
    'TueBaDZParserParams': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TueBaDZParserParams.java'},
    'TueBaDZPennTreeNormalizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\tuebadz\\TueBaDZPennTreeNormalizer.java'},
    'TueBaDZTreeReaderFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\tuebadz\\TueBaDZTreeReaderFactory.java'},
    'TwinScorer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\TwinScorer.java'},
    'TwoDimensionalCollectionValuedMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\TwoDimensionalCollectionValuedMap.java'},
    'TwoDimensionalCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\TwoDimensionalCounter.java'},
    'TwoDimensionalIntCounter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\stats\\TwoDimensionalIntCounter.java'},
    'TwoDimensionalMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\TwoDimensionalMap.java'},
    'TwoDimensionalSet': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\TwoDimensionalSet.java'},
    'TypedDependency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\TypedDependency.java'},
    'UDFeatureAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\UDFeatureAnnotator.java'},
    'UNKPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\eval\\UNKPrinter.java'},
    'UTF8EquivalenceFunction': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\UTF8EquivalenceFunction.java'},
    'UnaryGrammar': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\UnaryGrammar.java'},
    'UnaryRule': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\UnaryRule.java'},
    'UnaryTransition': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\UnaryTransition.java'},
    'UniformPrior': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\UniformPrior.java'},
    'UniformPriorFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\UniformPriorFactory.java'},
    'Unit': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\qe\\Unit.java'},
    'UnitPrefix': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\qe\\UnitPrefix.java'},
    'Units': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ie\\qe\\Units.java'},
    'UniversalChineseGrammaticalRelations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\UniversalChineseGrammaticalRelations.java'},
    'UniversalChineseGrammaticalStructure': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\UniversalChineseGrammaticalStructure.java'},
    'UniversalChineseGrammaticalStructureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\international\\pennchinese\\UniversalChineseGrammaticalStructureFactory.java'},
    'UniversalDependenciesConverter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\UniversalDependenciesConverter.java'},
    'UniversalDependenciesFeatureAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\UniversalDependenciesFeatureAnnotator.java'},
    'UniversalEnglishGrammaticalRelations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UniversalEnglishGrammaticalRelations.java'},
    'UniversalEnglishGrammaticalStructure': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UniversalEnglishGrammaticalStructure.java'},
    'UniversalEnglishGrammaticalStructureFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UniversalEnglishGrammaticalStructureFactory.java'},
    'UniversalEnhancer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\UniversalEnhancer.java'},
    'UniversalGappingEnhancer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\UniversalGappingEnhancer.java'},
    'UniversalGrammaticalRelations': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\UniversalGrammaticalRelations.java'},
    'UniversalGrammaticalStructure': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\ud\\UniversalGrammaticalStructure.java'},
    'UniversalPOSMapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UniversalPOSMapper.java'},
    'UniversalSemanticHeadFinder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UniversalSemanticHeadFinder.java'},
    'UnknownGTTrainer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\lexparser\\UnknownGTTrainer.java'},
    'UnknownVertexException': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\semgraph\\UnknownVertexException.java'},
    'UnknownWordPrinter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\dvparser\\UnknownWordPrinter.java'},
    'UnlabeledAttachmentEval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\metrics\\UnlabeledAttachmentEval.java'},
    'UnnamedConcreteDependency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UnnamedConcreteDependency.java'},
    'UnnamedDependency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\UnnamedDependency.java'},
    'UnorderedPair': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\UnorderedPair.java'},
    'UnvocLexicalMapper': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\international\\arabic\\pipeline\\UnvocLexicalMapper.java'},
    'UpdateParserOptions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\UpdateParserOptions.java'},
    'UselessTreeFilter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\treebank\\UselessTreeFilter.java'},
    'Util': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\nndep\\Util.java'},
    'ValueFunctions': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\tokensregex\\types\\ValueFunctions.java'},
    'ValueLabel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\ValueLabel.java'},
    'ValuedInterval': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\ValuedInterval.java'},
    'VariableStrings': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\tregex\\VariableStrings.java'},
    'VectorMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\neural\\VectorMap.java'},
    'VisibilityHandler': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\logging\\VisibilityHandler.java'},
    'ViterbiSearchGraphBuilder': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\sequences\\ViterbiSearchGraphBuilder.java'},
    'VocabFrequency': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\tools\\VocabFrequency.java'},
    'VocativeSieve': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\Sieves\\QMSieves\\VocativeSieve.java'},
    'WebServiceAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\WebServiceAnnotator.java'},
    'Weight': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\Weight.java'},
    'WeightMap': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\parser\\shiftreduce\\WeightMap.java'},
    'WeightedDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\WeightedDataset.java'},
    'WeightedRVFDataset': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\classify\\WeightedRVFDataset.java'},
    'WhitespaceLexer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WhitespaceLexer.java'},
    'WhitespaceTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WhitespaceTokenizer.java'},
    'WikidictAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\WikidictAnnotator.java'},
    'Word': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\Word.java'},
    'WordCatEqualityChecker': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\WordCatEqualityChecker.java'},
    'WordCatEquivalenceClasser': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\WordCatEquivalenceClasser.java'},
    'WordFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\WordFactory.java'},
    'WordLemmaTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\WordLemmaTag.java'},
    'WordLemmaTagFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\WordLemmaTagFactory.java'},
    'WordLists': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\coref\\data\\WordLists.java'},
    'WordSegmentingTokenizer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WordSegmentingTokenizer.java'},
    'WordShapeClassifier': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WordShapeClassifier.java'},
    'WordStemmer': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\WordStemmer.java'},
    'WordTag': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\WordTag.java'},
    'WordTagFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\ling\\WordTagFactory.java'},
    'WordToSentenceProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WordToSentenceProcessor.java'},
    'WordToTaggedWordProcessor': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WordToTaggedWordProcessor.java'},
    'WordTokenFactory': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\process\\WordTokenFactory.java'},
    'WordsToSentencesAnnotator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\WordsToSentencesAnnotator.java'},
    'XMLBeginEndIterator': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\objectbank\\XMLBeginEndIterator.java'},
    'XMLOutputter': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\pipeline\\XMLOutputter.java'},
    'XMLToAnnotation': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\quoteattribution\\XMLToAnnotation.java'},
    'XMLUtils': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\util\\XMLUtils.java'},
    'fakeShortNameToGRel': {   'source_file': 'CoreNLP\\src\\edu\\stanford\\nlp\\trees\\DependencyScoring.java'}}
